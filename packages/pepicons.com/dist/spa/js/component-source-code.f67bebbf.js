(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[3],{

/***/ "0a40":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("import * as THREE from 'three'\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader'\n\nclass PepHeader {\n  constructor(targetSelector) {\n    this.header = document.querySelector(targetSelector)\n    this.icons = []\n    this.otherIconsMap = {}\n    this.animationSpeed = 0.03\n    // this var increases/decreases padding for icon to icon collisions\n    this.iconPadding = 0\n    // this.titleBoundaries = []\n  }\n\n  init() {\n    this.createScene()\n    this.createRenderer()\n    this.createCamera(70, 1, 1000)\n    this.createHeaderBoundaryBox()\n    // this.drawLines(19, 79)\n    this.drawIconSets(2)\n    // this.drawTitle()\n    // animate loop binds to window when we need it to bind to this object\n    this.animate = this.animate.bind(this)\n  }\n\n  createScene() {\n    this.scene = new THREE.Scene()\n    // this.scene.background = new THREE.Color(\"0xffffff\")\n  }\n\n  createRenderer() {\n    if (!window.renderer) window.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      powerPreference: 'low-power',\n      precision: 'lowp',\n      depth: false,\n      stencil: false,\n  })\n    window.renderer.setClearColor( 0x000000, 0 ); // the default\n    // const w = this.header.offsetWidth\n    // const h = this.header.offsetHeight\n    // console.log('w: ', w, 'h: ', h)\n    // window.renderer.setSize(w, h)\n    window.renderer.setPixelRatio(window.devicePixelRatio)\n    console.log('pixelRatio: ', window.devicePixelRatio)\n    this.header.appendChild(window.renderer.domElement)\n    console.log('renderer.info: ', window.renderer.info)\n  }\n\n  createCamera(fieldOfView, nearClippingPlane, farClippingPlane) {\n    const aspectRatio = this.header.offsetWidth / this.header.offsetHeight\n    this.camera = new THREE.PerspectiveCamera(\n      fieldOfView,\n      aspectRatio,\n      nearClippingPlane,\n      farClippingPlane,\n    )\n    this.camera.position.set(0, 0, 200)\n  }\n\n  resizeCanvasToDisplaySize() {\n  const canvas = this.header\n  // look up the size the canvas is being displayed\n  const width = canvas.offsetWidth\n  const height = canvas.offsetHeight\n\n  // adjust displayBuffer size to match\n  if (canvas.width !== width || canvas.height !== height) {\n    // you must pass false here or three.js sadly fights the browser\n    window.renderer.setSize(width, height, true)\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n\n    // update any render target sizes here\n  }\n}\n\n  createHeaderBoundaryBox() {\n    // const xPadding = 79\n    const xPadding = 0\n    // const yPadding = 20\n    const yPadding = 0\n    this.canvasBoundary = new THREE.Box3()\n    const minBounds = new THREE.Vector3(0, 0, 0)\n    const maxBounds = new THREE.Vector3(\n      // this.header.clientWidth - xPadding,\n      // this.header.clientHeight - yPadding,\n      1500,\n      // 1250,\n      // 280,\n      // this.header.clientWidth * 1.25,\n      // this.header.clientHeight * 1.25,\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      // this.header.clientWidth + 400,\n      280,\n      0,\n    )\n    /*\n    1416 -> 1780\n    966 ->\n    */\n    console.log('minBounds: ', minBounds, 'maxBounds: ', maxBounds)\n    this.canvasBoundary.setFromCenterAndSize(minBounds, maxBounds)\n  }\n\n  drawLines(totalVertical, totalHorizontal) {\n    const canvas = window.renderer.domElement\n    const height = canvas.clientHeight\n    const width = canvas.clientWidth\n    const dy = height / totalVertical\n    const dx = width / totalHorizontal\n    const color = '#BABABA'\n\n    const group = new THREE.Group()\n\n    // TODO figure out better way to do this\n    const offsetY = -23\n    const offsetX = 37\n\n    for (let i = 1; i <= totalVertical; i++) {\n      const material = new THREE.LineBasicMaterial({ color: color })\n      const points = []\n      points.push(new THREE.Vector3(-(width / 2), -(height / 2) + offsetY + dy * i))\n      points.push(new THREE.Vector3(width / 2, -(height / 2) + offsetY + dy * i))\n      const geometry = new THREE.BufferGeometry().setFromPoints(points)\n      const line = new THREE.Line(geometry, material)\n      group.add(line)\n    }\n    for (let i = 1; i <= totalHorizontal; i++) {\n      const material = new THREE.LineBasicMaterial({ color: color })\n      const points = []\n      points.push(new THREE.Vector3(-(width / 2) + offsetX + dx * i, -(height / 2)))\n      points.push(new THREE.Vector3(-(width / 2) + offsetX + dx * i, height / 2))\n      const geometry = new THREE.BufferGeometry().setFromPoints(points)\n      const line = new THREE.Line(geometry, material)\n      group.add(line)\n    }\n    this.scene.add(group)\n  }\n\n  drawIconSets(setCount) {\n    const reqSvgs = require.context('src/assets/icons', true, /\\.svg$/)\n    let svgs = []\n    reqSvgs.keys().forEach((key) => {\n      for (let i = 0; i < setCount; i++) {\n        svgs.push({ pathShort: key, pathLong: reqSvgs(key), kind: 'icon' })\n      }\n    })\n\n    const initialPositions = this.generateInitialPositions(svgs)\n    for (let icon of svgs) {\n      const coordinates = initialPositions.pop()\n      this.loadSvg(icon.pathLong, icon.kind, coordinates)\n    }\n  }\n\n  drawTitle() {\n    const reqSvgs = require.context('src/assets/title', true, /\\.svg$/)\n    let svgs = []\n    reqSvgs.keys().forEach((key) => {\n      svgs.push({ pathShort: key, pathLong: reqSvgs(key), kind: 'title' })\n    })\n    // TODO - these coordinates need to be based on the size of the canvas AND svg\n    const xMinLeft = -583 / 1.75\n    const xMinRight = -62\n    const yCenter = 50\n\n    this.loadSvg(svgs[0].pathLong, svgs[0].kind, { x: xMinLeft, y: yCenter })\n    this.loadSvg(svgs[1].pathLong, svgs[1].kind, { x: xMinRight, y: yCenter })\n  }\n\n  createTitleBoundaryBox(icon) {\n    this.titleBoundaries.push(this.createAABB(icon))\n  }\n\n  generateInitialPositions(items) {\n    const spawnPadding = 100\n    const cavasWidth = window.renderer.domElement.clientWidth - spawnPadding\n    const cavasHeight = window.renderer.domElement.clientHeight - spawnPadding\n    const xRange = cavasWidth - cavasWidth / 2\n    const yRange = cavasHeight - cavasHeight / 2\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    const dx = cavasWidth / (items.length + 1)\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n    const dy = cavasHeight / (items.length + 1)\n\n    // generate all x, y coordinates\n    let initialXCoordinates = []\n    let initialYCoordinates = []\n    for (let i = 1; i <= items.length; i++) {\n      let coordinates = {\n        x: xRange - dx * i,\n        y: yRange - dy * i,\n      }\n      initialXCoordinates.push(xRange - dx * i)\n      initialYCoordinates.push(yRange - dy * i)\n    }\n\n    // shuffle x values\n    let initialPositions = []\n    for (let i = initialXCoordinates.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1))\n      const tempX = initialXCoordinates[i]\n      initialXCoordinates[i] = initialXCoordinates[j]\n      initialXCoordinates[j] = tempX\n    }\n    // then combine into array of coordinates\n    for (let i = 0; i < initialXCoordinates.length; i++) {\n      const coordinates = {\n        x: Math.round(initialXCoordinates[i]),\n        y: Math.round(initialYCoordinates[i]),\n      }\n      initialPositions.push(coordinates)\n    }\n    return initialPositions\n  }\n\n  createRandomVector() {\n    const min = -10\n    const max = 10\n    let randX = Math.floor(Math.random() * (max - min + 1)) + min\n    const d = 10 - Math.abs(randX)\n    // let randY = Math.floor(Math.random() * (max - min + 1)) + min\n    let randY = Math.floor(Math.random() * (d - -d + 1)) + -d\n    // never have stationary icons, also breaks current physics model\n    if (randX === 0) randX = 1\n    if (randY === 0) randY = 1\n    return new THREE.Vector2(randX, randY)\n  }\n\n  loadSvg(url, kind, coordinates) {\n    const loader = new SVGLoader()\n    const group = new THREE.Group()\n    group.userData.kind = kind\n\n    loader.load(url, (data) => {\n      const paths = data.paths\n      if (kind === 'title') {\n        group.scale.multiplyScalar(1.75)\n      } else {\n        group.scale.multiplyScalar(0.8)\n      }\n      group.position.x = coordinates.x\n      group.position.y = coordinates.y\n      group.scale.y *= -1\n\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i]\n\n        const fillColor = path.userData.style.fill\n        if (fillColor !== undefined && fillColor !== 'none') {\n          const material = new THREE.MeshBasicMaterial({\n            color: new THREE.Color().setStyle(fillColor),\n            opacity: path.userData.style.fillOpacity,\n            transparent: path.userData.style.fillOpacity < 1,\n            side: THREE.DoubleSide,\n            depthWrite: false,\n          })\n\n          const shapes = path.toShapes(true)\n          for (let j = 0; j < shapes.length; j++) {\n            const shape = shapes[j]\n            const geometry = new THREE.ShapeBufferGeometry(shape)\n            const mesh = new THREE.Mesh(geometry, material)\n            group.add(mesh)\n          }\n        }\n\n        const strokeColor = path.userData.style.stroke\n        if (strokeColor !== undefined && strokeColor !== 'none') {\n          const material = new THREE.MeshBasicMaterial({\n            color: new THREE.Color().setStyle(strokeColor),\n            opacity: path.userData.style.strokeOpacity,\n            transparent: path.userData.style.strokeOpacity < 1,\n            side: THREE.DoubleSide,\n            depthWrite: false,\n          })\n\n          for (let j = 0, jl = path.subPaths.length; j < jl; j++) {\n            const subPath = path.subPaths[j]\n            const geometry = SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style)\n            if (geometry) {\n              const mesh = new THREE.Mesh(geometry, material)\n              group.add(mesh)\n            }\n          }\n        }\n\n        if (path.userData.node.id) {\n          group.name = path.userData.node.id\n          if (kind === 'icon') {\n            group.userData.vector = this.createRandomVector()\n          } else if (kind === 'title') {\n            this.createTitleBoundaryBox(group)\n          }\n          group.userData.initialPosition = group.position\n        }\n      }\n      this.scene.add(group)\n\n      group.userData.AABB = this.createAABB(group)\n      this.icons.push(group)\n    })\n  }\n\n  detectWallCollision(icon) {\n    // const iconBoundaryBox = new THREE.Box3().setFromObject(icon)\n    const iconBoundaryBox = icon.userData.AABB\n    if (iconBoundaryBox.intersectsBox(this.canvasBoundary)) {\n      const xBoundsCollision =\n        iconBoundaryBox.max.x >= this.canvasBoundary.max.x ||\n        iconBoundaryBox.min.x <= this.canvasBoundary.min.x\n      const yBoundsCollision =\n        iconBoundaryBox.max.y >= this.canvasBoundary.max.y ||\n        iconBoundaryBox.min.y <= this.canvasBoundary.min.y\n      if (xBoundsCollision) icon.userData.vector.x *= -1\n      if (yBoundsCollision) icon.userData.vector.y *= -1\n    }\n  }\n\n  checkForTitleCollision(icon) {\n    // not in use - save incase we need this in the future\n    const iconBoundaryBox = new THREE.Box3().setFromObject(icon)\n    for (const titleBoundary of this.titleBoundaries) {\n      if (iconBoundaryBox.intersectsBox(titleBoundary)) {\n        const xBoundsCollision =\n          iconBoundaryBox.max.x >= titleBoundary.max.x ||\n          iconBoundaryBox.min.x <= titleBoundary.min.x\n        const yBoundsCollision =\n          iconBoundaryBox.max.y >= titleBoundary.max.y ||\n          iconBoundaryBox.min.y <= titleBoundary.min.y\n        if (xBoundsCollision) icon.userData.vector.x *= -1\n        if (yBoundsCollision) icon.userData.vector.y *= -1\n      }\n    }\n  }\n\n  createAABB(icon) {\n    const box = new THREE.Box3().setFromObject(icon)\n    box.expandByVector(new THREE.Vector3(this.iconPadding, this.iconPadding, 0))\n    return box\n  }\n\n  updateIconPositions() {\n    for (const icon of this.icons) {\n      // if (icon.userData.kind === 'title') continue\n      icon.position.x += icon.userData.vector.x * this.animationSpeed\n      icon.position.y += icon.userData.vector.y * this.animationSpeed\n      this.detectWallCollision(icon)\n      // this.checkForTitleCollision(icon)\n      const box1 = icon.userData.AABB.setFromObject(icon)\n      for (const otherIcon of this.icons) {\n        // if (otherIcon.userData.kind === 'title') continue\n        if (otherIcon.uuid === icon.uuid) continue\n        const box2 = otherIcon.userData.AABB.setFromObject(otherIcon)\n        if (box1.intersectsBox(box2)) {\n          this.handleCollision(icon, otherIcon)\n        }\n      }\n    }\n  }\n\n  handleCollision(icon, otherIcon) {\n    const oldIconX = icon.userData.vector.x\n    const oldIconY = icon.userData.vector.y\n    const oldOtherIconX = otherIcon.userData.vector.x\n    const oldOtherIconY = otherIcon.userData.vector.y\n    icon.userData.vector.x = oldOtherIconX\n    icon.userData.vector.y = oldOtherIconY\n    otherIcon.userData.vector.x = oldIconX\n    otherIcon.userData.vector.y = oldIconY\n  }\n\n  animate() {\n    this.updateIconPositions()\n    this.resizeCanvasToDisplaySize()\n    window.renderer.render(this.scene, this.camera)\n\n    setTimeout(() => {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      requestAnimationFrame(this.animate)\n    }, 33)\n\n  }\n}\n\nexport default PepHeader\n");

/***/ }),

/***/ "1324":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"pep-hero\">\n    <div class=\"absolute-overlay flex-center\"><slot /></div>\n    <h1 class=\"_title\"><span>Pep</span><span>icons</span></h1>\n  </div>\n</template>\n\n<style lang=\"sass\">\n// $\n// retro school paper grid-lines\n=grid-lines($_color)\n  background-image: linear-gradient(to right, #{$_color} 1px, transparent 1px), linear-gradient(to bottom, #{$_color} 1px, transparent 1px)\n  background-position: -1px -1px\n.pep-hero\n  +grid-lines(transparentize($c-washed-cloth, 0.5))\n.dark-mode\n  .pep-hero\n    +grid-lines(transparentize($c-old-tucan, 0.9))\n\n// header and grid-lines heights\n$h-xs: 15px\n$h-sm: 20px\n$h-md: 20px\n$h-lg: 25px\n.pep-hero\n  background-size: $h-xs $h-xs\n  +media-sm(background-size, $h-sm $h-sm)\n  +media-md(background-size, $h-md $h-md)\n  +media-lg(background-size, $h-lg $h-lg)\n  height: $h-xs * 9 - 1\n  +media-sm(height, $h-sm * 9 - 1)\n  +media-md(height, $h-md * 9 - 1)\n  +media-lg(height, $h-lg * 9 - 1)\n\n// other\n.pep-hero\n  position: relative\n  +flex-center()\n  ._title\n    // typography\n    +val()\n    letter-spacing: 2pt\n    text-transform: uppercase\n    text-align: center\n    // fixes to line-height so that the h1 is the same height as the content\n    line-height: 0.8em\n    > span\n      display: inline-block\n      transform: translateY(13%)\n    // text outline/shadow\n    -webkit-text-stroke: 2px black\n    text-stroke: 2px black\n    +media-sm(-webkit-text-stroke, 3px black)\n    +media-sm(text-stroke, 3px black)\n    +media-lg(-webkit-text-stroke, 4px black)\n    +media-lg(text-stroke, 4px black)\n    font-size: 50px // iphone SE\n    +media-xs(font-size, 60px)\n    +media-sm(font-size, 80px)\n    +media-md(font-size, 100px)\n    +media-lg(font-size, 140px)\n    > span:first-child\n      +C(color, sig-red)\n    > span:last-child\n      +C(color, sig-blue)\n</style>\n\n<script>\nexport default {\n  name: 'PepHero',\n  props: {},\n  methods: {},\n  computed: {},\n}\n</script>\n");

/***/ }),

/***/ "1564":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <button @click=\"toggle\" :class=\"`html-button ${value ? '_expanded' : ''}`\">\n    <Pepicon class=\"_icon\" name=\"angle-left\" :type=\"type\" :color=\"color\" :stroke=\"stroke\" />\n    <Pepicon class=\"_icon\" name=\"angle-right\" :type=\"type\" :color=\"color\" :stroke=\"stroke\" />\n  </button>\n</template>\n\n<style lang=\"sass\" scoped>\n// $\n.html-button\n  +reset-button()\n  display: flex\n  padding: $md\n  ._icon\n    transition: all 100ms ease-out\n  &._expanded\n    ._icon:first-child\n      margin-right: $md\n</style>\n\n<script>\nimport { Pepicon } from 'vue-pepicons'\n\nexport default {\n  name: 'HtmlButton',\n  components: { Pepicon },\n  props: {\n    value: { type: Boolean, default: false },\n    type: String,\n    color: String,\n    stroke: String,\n  },\n  methods: {\n    toggle() {\n      this.$emit('input', !this.value)\n    },\n  },\n}\n</script>\n");

/***/ }),

/***/ "362b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"icon-info\">\n    <HtmlButton class=\"_toggle-code-button\" v-model=\"_.codeShown\" v-bind=\"config\" />\n    <div class=\"_code-section\">\n      <div class=\"flex\">\n        <q-tabs\n          v-model=\"_.openCodeTab\"\n          dense\n          shrink\n          narrowIndicator\n          noCaps\n          align=\"left\"\n          indicatorColor=\"primary\"\n          content-class=\"text-h6\"\n        >\n          <q-tab contentClass=\"_tab\" :ripple=\"false\" name=\"vue\" label=\"Vue\" />\n          <q-tab contentClass=\"_tab\" :ripple=\"false\" name=\"svg\" label=\"SVG\" />\n        </q-tabs>\n      </div>\n      <q-tab-panels v-model=\"_.openCodeTab\" animated class=\"_tab-panels\">\n        <q-tab-panel class=\"_tab-panel\" name=\"vue\"\n          ><CodeBlock lang=\"html\" :content=\"codeVue\" class=\"_code-block\"\n        /></q-tab-panel>\n        <q-tab-panel class=\"_tab-panel\" name=\"svg\"\n          ><CodeBlock lang=\"html\" :content=\"codeSvg\" class=\"_code-block\"\n        /></q-tab-panel>\n      </q-tab-panels>\n    </div>\n\n    <div class=\"_top-door\" :class=\"{ '_top-door-transform': _.codeShown }\">\n      <Pepicon v-bind=\"config\" size=\"80px\" />\n      <div class=\"text-h5 mt-xl\">{{ config.name }}</div>\n    </div>\n    <div class=\"_bottom-door text-h6 px-xl\" :class=\"{ '_bottom-door-transform': _.codeShown }\">\n      <div class=\"flex-center relative\">\n        <div>SVG</div>\n        <div class=\"flex q-gutter-sm mt-xs\">\n          <IconButton\n            :iconConfig=\"{\n              ...configOptionButtons,\n              name: 'cloud-down',\n            }\"\n            :isActive=\"_.downloadSvgDone\"\n            @click=\"downloadSvg\"\n          />\n          <IconButton\n            :iconConfig=\"{\n              ...configOptionButtons,\n              name: 'clipboard',\n            }\"\n            :isActive=\"_.copySvgDone\"\n            @click=\"copySvg\"\n          />\n        </div>\n      </div>\n      <div class=\"flex-center\">\n        <div>PNG</div>\n        <div class=\"flex q-gutter-sm mt-xs\">\n          <IconButton\n            :iconConfig=\"{\n              ...configOptionButtons,\n              name: 'cloud-down',\n            }\"\n            :isActive=\"_.downloadPngDone\"\n            @click=\"downloadPng\"\n          />\n          <IconButton\n            :iconConfig=\"{\n              ...configOptionButtons,\n              name: 'clipboard',\n            }\"\n            :isActive=\"_.copyPngDone\"\n            @click=\"copyPng\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"sass\">\n// $\n.icon-info\n  +C(background-color, white)\n  min-width: 280px\n  width: 400px\n  max-width: inherit\n  position: relative\n  overflow: hidden\n  border-radius: 1rem\n  +fix-for-overflow-hidden-with-border-radius()\n.dark-mode\n  .icon-info\n    +C(background-color, nightfall)\n\n._toggle-code-button\n  position: absolute\n  top: 0\n  right: 0\n  z-index: 2\n\n._top-door, ._bottom-door\n  z-index: 1\n  position: relative\n  background-color: inherit\n  transition: all 200ms ease-out !important\n._top-door\n  height: 288px\n  +media-xs(height, 320px)\n  +flex-center\n._bottom-door\n  display: flex\n  justify-content: space-around\n  align-items: center\n  height: 162px\n  +media-xs(height, 180px)\n  &::before\n    content: ''\n    background-color: transparentize($c-washed-cloth, 0.9)\n    +absolute-overlay()\n\n._top-door-transform\n  transform: translateY(-100%)\n._bottom-door-transform\n  transform: translateY(100%)\n\n._code-section\n  +absolute-overlay()\n  z-index: 0\n\n._tab\n  height: 50px\n  +pt($sm)\n  > *\n    +t-subtitle1()\n._tab-panels\n  height: calc(100% - 100px)\n  > *\n    height: 100%\n  ._tab-panel\n    padding: 0\n    height: inherit\n  ._code-block\n    height: inherit\n    > *, > * > *\n      height: inherit\n    code\n      white-space: pre-wrap\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, reactive, PropType } from '@vue/composition-api'\nimport { pepiconSvgString } from 'pepicons'\nimport { Pepicon } from 'vue-pepicons'\nimport { CodeBlock } from 'planetar'\nimport copyToClipboard from 'copy-text-to-clipboard'\nimport IconButton from '../atoms/IconButton.vue'\nimport HtmlButton from '../atoms/HtmlButton.vue'\nimport { downloadBase64AsFile, downloadFile } from '../../helpers/download'\nimport { svgToBase64Png, base64ToBlob } from '../../helpers/conversion'\nimport { defaultsIconConfig, IconConfig } from '../../types'\n\ndeclare class ClipboardItem {\n  constructor(data: { [mimeType: string]: Blob })\n}\n\nfunction generateVueCode(iconName: string, config: IconConfig): string {\n  const _stroke =\n    config.stroke && config.stroke !== 'black' ? `\\n    stroke=\"${config.stroke}\"` : ''\n  return `<template>\n  <Pepicon\n    name=\"${iconName}\"\n    type=\"${config.type}\"\n    color=\"${config.color}\"${_stroke}\n  />\n</template>\n\n<script lang=\"js\">\nimport { Pepicon } from 'vue-pepicons'\n\nexport default {\n  components: { Pepicon }\n}\n<\\/script>`\n}\n\nexport default defineComponent({\n  name: 'IconInfo',\n  components: { IconButton, HtmlButton, Pepicon, CodeBlock },\n  props: {\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string }}\n     */\n    config: {\n      type: Object as PropType<IconConfig>,\n      default: () => ({ ...defaultsIconConfig() }),\n    },\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string }}\n     */\n    configOptionButtons: {\n      type: Object as PropType<IconConfig>,\n      default: () => ({ ...defaultsIconConfig() }),\n    },\n  },\n  setup(props) {\n    const _ = reactive({\n      openCodeTab: 'vue',\n      codeShown: false,\n      downloadSvgDone: false,\n      copySvgDone: false,\n      downloadPngDone: false,\n      copyPngDone: false,\n    })\n\n    const codeSvg = pepiconSvgString(props.config as any)\n    const codeVue = generateVueCode(props.config.name || '', props.config)\n\n    function downloadSvg(): void {\n      downloadFile(codeSvg, `${props.config.name}.svg`)\n      _.downloadSvgDone = true\n    }\n    function copySvg(): void {\n      const copied = copyToClipboard(codeSvg)\n      _.copySvgDone = copied\n    }\n    async function downloadPng(): Promise<void> {\n      const _codeSvg = pepiconSvgString({ ...props.config, size: '48px' } as any)\n      const pngString = await svgToBase64Png(_codeSvg)\n      downloadBase64AsFile(pngString, `${props.config.name}.png`)\n      _.downloadPngDone = true\n    }\n    async function copyPng(): Promise<void> {\n      const _codeSvg = pepiconSvgString({ ...props.config, size: '48px' } as any)\n      const pngString = await svgToBase64Png(_codeSvg)\n      const item = new ClipboardItem({\n        'image/png': base64ToBlob(pngString),\n      })\n      // @ts-ignore\n      if (window.navigator?.clipboard?.write) {\n        // @ts-ignore\n        window.navigator.clipboard.write([item]).then(() => (_.copyPngDone = true))\n      }\n    }\n\n    return { _, codeSvg, codeVue, copySvg, copyPng, downloadSvg, downloadPng }\n  },\n})\n</script>\n");

/***/ }),

/***/ "3b81":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <q-dialog\n    ref=\"dialog\"\n    @hide=\"onDialogHide\"\n    v-on=\"dialogEvents\"\n    v-bind=\"{ ...dialogProps, style: '', class: '' }\"\n  >\n    <div :class=\"['dialog-wrapper', dialogProps.class].flat()\" :style=\"dialogProps.style\">\n      <component :is=\"slotComponent\" v-bind=\"innerSlotProps\" v-on=\"innerSlotEvents\" />\n      <q-btn\n        v-if=\"showCloseButton\"\n        @click=\"hide\"\n        class=\"_close\"\n        icon=\"close\"\n        color=\"primary\"\n        size=\"lg\"\n        flat\n      />\n      <q-inner-loading :showing=\"dialogProps.loading\">\n        <q-spinner size=\"50px\" color=\"primary\" />\n      </q-inner-loading>\n    </div>\n  </q-dialog>\n</template>\n\n<style lang=\"sass\" scoped>\n// $\n\n.dialog-wrapper\n  position: relative\n  background: none\n  min-width: 280px\n  max-width: 80vw\n  ._close\n    position: absolute\n    top: 0\n    right: 0\n</style>\n\n<script lang=\"js\">\nimport { isFunction } from 'is-what'\n\nexport default {\n  name: 'DialogWrapper',\n  props: {\n    /**\n     * Display a generic `✗` close button on the top-right.\n     */\n    showCloseButton: { type: Boolean, default: false },\n    /**\n     * The events that will be bound to the dialog component (with `v-on=\"dialogEvents\"`)\n     */\n    dialogEvents: { type: Object, default: () => ({}) },\n    /**\n     * The props that will be bound to the dialog component (with `v-bind=\"dialogProps\"`)\n     */\n    dialogProps: { type: Object, default: () => ({}) },\n    /**\n     * The component to show in the dialog. Can be a direct Vue component instance or a string with the component name (if registered).\n     * @type {*}\n     */\n    slotComponent: { type: undefined },\n    /**\n     * The props that will be bound to the slot component (with `v-bind=\"slotProps\"`). When passed a function it will receive the DialogWrapper context `(this)` as param and must return an object (with `this` you can use the context to do `hide()` etc.)\n     */\n    slotProps: { type: [Object, Function], default: () => ({}) },\n    /**\n     * The events that will be listened to, on the slot component (with `v-on=\"slotEvents\"`). When passed a function it will receive the DialogWrapper context `(this)` as param and must return an object (with `this` you can use the context to do `hide()` etc.)\n     */\n    slotEvents: { type: [Object, Function], default: () => ({}) },\n  },\n  data () {\n    const { slotProps, slotEvents } = this\n    const innerSlotProps = isFunction(slotProps) ? slotProps(this) : slotProps\n    const innerSlotEvents = isFunction(slotEvents) ? slotEvents(this) : slotEvents\n    return {\n      innerSlotProps,\n      innerSlotEvents,\n    }\n  },\n  computed: {},\n  methods: {\n    // following method is REQUIRED\n    // (don't change its name --> \"show\")\n    show () {\n      if (!this.$refs.dialog) return\n      this.$refs.dialog.show()\n    },\n\n    // following method is REQUIRED\n    // (don't change its name --> \"hide\")\n    hide () {\n      if (!this.$refs.dialog) return\n      this.$refs.dialog.hide()\n    },\n\n    onDialogHide (val) {\n      if (val !== undefined) {\n        return this.Ok(val)\n      }\n      // required to be emitted\n      // when QDialog emits \"hide\" event\n      this.$emit('hide')\n    },\n\n    Ok (val) {\n      // on Ok, it is REQUIRED to\n      // emit \"ok\" event (with optional payload)\n      // before hiding the QDialog\n      this.$emit('ok', val)\n      // or with payload: this.$emit('ok', { ... })\n\n      // then hiding dialog\n      this.hide()\n    },\n\n    onCancelClick () {\n      // we just need to hide dialog\n      this.hide()\n    },\n  },\n}\n</script>\n");

/***/ }),

/***/ "42c1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <transition-group class=\"icon-grid\" name=\"anim-grid\" tag=\"div\">\n    <div class=\"anim-grid-item\" v-for=\"name in iconNames\" :key=\"name\">\n      <IconTile\n        :searchInput=\"searchInput\"\n        :config=\"{ ...config, name }\"\n        @click.native=\"() => clickTile(name)\"\n      />\n    </div>\n  </transition-group>\n</template>\n\n<style lang=\"sass\">\n\n.icon-grid\n  display: grid\n  min-width: 300px\n  justify-content: center\n  grid-template-columns: repeat(auto-fit, 100px)\n  grid-auto-rows: 100px\n  grid-gap: $lg\n.anim-grid-item\n  width: 100px\n  height: 100px\n  transition: all 250ms\n  opacity: 1\n  > *\n    height: 100%\n    width: 100%\n.anim-grid-enter, .anim-grid-leave-to\n  opacity: 0\n.anim-grid-leave-active\n  display: none\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from '@vue/composition-api'\nimport { defaultsIconConfig, IconConfig } from '../../types'\nimport IconTile from '../atoms/IconTile.vue'\n\nexport default defineComponent({\n  name: 'IconGrid',\n  components: { IconTile },\n  props: {\n    iconNames: { type: Array as PropType<string[]> },\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string }}\n     */\n    config: {\n      type: Object as PropType<IconConfig>,\n      default: () => ({ ...defaultsIconConfig() }),\n    },\n    searchInput: { type: String },\n  },\n  setup(props, { emit }) {\n    function clickTile(icon: string): void {\n      emit('click-tile', icon)\n    }\n    return { clickTile }\n  },\n})\n</script>\n");

/***/ }),

/***/ "5f7c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"icon-expose\"></div>\n</template>\n\n<style lang=\"sass\">\n// .icon-expose\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, toRef, Ref } from '@vue/composition-api'\n\nexport default defineComponent({\n  name: 'IconExpose',\n  props: {\n    title: { type: String, required: true },\n  },\n  setup() {\n    return {}\n  },\n})\n</script>\n");

/***/ }),

/***/ "5fd8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <svg\n    class=\"company-logo\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    :width=\"_size\"\n    :height=\"_size\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      v-if=\"name === 'twitter'\"\n      fill=\"currentColor\"\n      d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"\n    />\n    <path\n      v-if=\"name === 'github'\"\n      fill=\"currentColor\"\n      d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n    />\n  </svg>\n</template>\n\n<style lang=\"sass\">\n.company-logo\n  color: inherit\n  path\n    color: inherit\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from '@vue/composition-api'\n\nexport default defineComponent({\n  name: 'CompanyLogo',\n  props: {\n    name: { type: String as PropType<'github' | 'twitter'>, default: 'md' },\n    size: { type: String as PropType<'sm' | 'md'>, default: 'md' },\n  },\n  setup(props) {\n    const _size = props.size === 'md' ? 24 : 16\n    return { _size }\n  },\n})\n</script>\n");

/***/ }),

/***/ "6180":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <q-page padding class=\"page-index\">\n    <div class=\"_page-content\">\n      <div class=\"flex mb-xxl\">\n        <Stack class=\"ml-auto\" classes=\"justify-end items-center\">\n          <Stack class=\"ml-auto\" classes=\"items-center\">\n            <PepLink href=\"https://github.com/CyCraft/pepicons\" content=\"GitHub\" icon=\"github\" />\n            <PepLink\n              @click.native.stop.prevent=\"() => scrollTo('#about-us')\"\n              content=\"About Us\"\n              icon=\"info-filled\"\n              class=\"cursor-arrow-down\"\n            />\n          </Stack>\n          <a href=\"https://pepicons.com/PepiconSvgs.zip\" class=\"download-button\">Download</a>\n        </Stack>\n      </div>\n      <div class=\"mb-md text-center\">\n        Pepicons is an icon-set of over one hundred retro icons inspired by the 80's.\n        <br />Every icon available in 2 variants: <strong>Pop!</strong> and <strong>Print ❏</strong>\n      </div>\n      <div class=\"mb-xxl text-center\">\n        If this project has helped you, please consider\n        <PepLink\n          href=\"https://github.com/sponsors/mesqueeb\"\n          content=\"sponsoring us on GitHub\"\n          retroUnderline\n        />!\n      </div>\n      <Pickers v-model=\"_.config\" :configComputed=\"configComputed\" class=\"mb-md\" />\n      <PepInput\n        class=\"mb-xxl\"\n        id=\"top\"\n        :color=\"_.config.color\"\n        v-model=\"_.searchInput\"\n        @blur=\"() => setUrlQuery(_.searchInput)\"\n        @keydown.meta=\"() => setUrlQuery(_.searchInput)\"\n        :debounce=\"200\"\n        :isDarkMode=\"_.config.isDarkMode\"\n        :iconConfig=\"{ ...configComputed, name: 'loop' }\"\n      />\n      <template v-for=\"category in categories\">\n        <div class=\"mb-xxl\" v-if=\"categoryIconNamesDic[category].length\" :key=\"category\">\n          <div class=\"text-section-title\">{{ category }}</div>\n          <IconGrid\n            :iconNames=\"categoryIconNamesDic[category]\"\n            :config=\"configComputed\"\n            :searchInput=\"_.searchInput\"\n            @click-tile=\"openTileDialog\"\n          />\n        </div>\n      </template>\n      <div class=\"_section\">\n        <div class=\"text-section-title\">Request Icons</div>\n        <div>\n          Feel free to\n          <PepLink\n            href=\"https://github.com/CyCraft/pepicons/issues/new?labels=icon+request&template=icon-request.md\"\n            retroUnderline\n            content=\"request\"\n          />\n          a new icon on GitHub. 　🙃\n        </div>\n      </div>\n      <div class=\"_section\">\n        <div class=\"text-section-title\" id=\"about-us\">About Us</div>\n        <div class=\"mb-lg\">\n          Read the\n          <PepLink\n            href=\"https://medium.com/@lucaban/pepicons-retro-icon-set-now-available-for-designers-and-coders-40db866a7460\"\n            retroUnderline\n            content=\"announcement blog post\"\n          />\n          to read about our motivation for creating Pepicons!<br /><br />Pepicons was made by these\n          peeps:\n        </div>\n        <Stack classes=\"justify-center\" gap=\"lg\">\n          <ProfileCard\n            name=\"Luca Ban\"\n            :description=\"`Likes… jokes, minecraft\\nWorks as… coder\\nPassionate about… design`\"\n            profileUrl=\"luca.jpg\"\n            color=\"#55BBC5\"\n            profileImgStyle=\"margin-left: 32px\"\n            :links=\"['https://github.com/mesqueeb', 'https://twitter.com/mesqueeb']\"\n          />\n          <ProfileCard\n            name=\"Asuka\"\n            :description=\"`Likes… cats, vintage toys\\nWorks as… designer\\nPassionate about… cult films`\"\n            profileUrl=\"asuka.jpg\"\n            color=\"#F092AD\"\n            :links=\"['https://twitter.com/asukit']\"\n          />\n        </Stack>\n      </div>\n      <div class=\"mt-xxxl flex-center\">\n        <PepLink\n          content=\"Go to top\"\n          class=\"cursor-arrow-up px-md py-sm\"\n          @click.native.stop.prevent=\"() => scrollTo('#top')\"\n        />\n        <div class=\"mt-xxl\">\n          <PepLink\n            href=\"https://github.com/sponsors/mesqueeb\"\n            retroUnderline\n            content=\"Sponsor development\"\n          />\n        </div>\n      </div>\n    </div>\n  </q-page>\n</template>\n\n<style lang=\"sass\">\n// $\n.page-index\n  transition: background-color 500ms\n  ._page-content\n    +mx(auto)\n    max-width: 980px\n  ._section\n    +mt(160px)\n\n.download-button\n  +reset-a()\n  +reset-button()\n  +t-subtitle1()\n  +py($md)\n  +px($xl)\n  border-radius: $md\n  text-transform: uppercase\n  font-weight: $bold\n  +C(color, white)\n  +C(background, nightfall)\n  +C(border, ivory, thin solid)\n  &:active\n    transform: scale(0.95)\n.dark-mode .download-button\n  +C(border, white, thin solid)\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, watch, reactive, ref } from '@vue/composition-api'\nimport {\n  pop,\n  print,\n  Pepicon,\n  PepiconPrint,\n  synonyms,\n  synonymsJa,\n  categories,\n  pepiconCategoryDic,\n} from 'pepicons'\nimport { sort } from 'fast-sort'\nimport { Dialog } from 'quasar'\nimport Stack from '../components/atoms/Stack.vue'\nimport PepInput from '../components/atoms/PepInput.vue'\nimport IconGrid from '../components/molecules/IconGrid.vue'\nimport Pickers from '../components/molecules/Pickers.vue'\nimport PepLink from '../components/atoms/PepLink.vue'\nimport ProfileCard from '../components/atoms/ProfileCard.vue'\nimport { cssVar, setPrimaryColor } from '../helpers/colorHelpers'\nimport { cleanupForSearch } from '../helpers/search'\nimport { scrollTo } from '../helpers/scroll'\nimport { setUrlQuery, getQueryFromUrl } from '../helpers/urlHelpers'\nimport { defaultsIconConfig, IconConfig } from '../types'\n\nexport default defineComponent({\n  name: 'PageIndex',\n  components: { IconGrid, Pickers, PepInput, PepLink, ProfileCard, Stack },\n  created() {\n    document.body.classList.add('light-mode')\n    document.body.classList.add(`${defaultsIconConfig().type}-mode`)\n  },\n  setup(props, { emit }) {\n    const hash = getQueryFromUrl()\n\n    const _ = reactive({\n      searchInput: hash || '',\n      config: defaultsIconConfig({ isDarkMode: false }),\n    })\n\n    const configComputed = computed(() => {\n      const { type, color: _color, stroke: _stroke, isDarkMode } = _.config\n      const useColorAsStroke = type === 'print' && isDarkMode\n      const color = useColorAsStroke ? 'black' : _color\n      const stroke = useColorAsStroke ? _color : _stroke\n      return { type, color, stroke }\n    })\n\n    watch(\n      () => _.config.type,\n      (newVal) => {\n        document.body.className = document.body.className.replace(\n          /(print|pop)-mode/g,\n          `${newVal}-mode`,\n        )\n      },\n    )\n    watch(\n      () => _.config.color,\n      (newVal) => {\n        setPrimaryColor(newVal)\n      },\n    )\n    watch(\n      () => _.config.isDarkMode,\n      (isDarkMode) => {\n        if (isDarkMode === false) {\n          document.body.className = document.body.className.replace(/dark-mode/g, 'light-mode')\n          emit('set-is-dark-mode', false)\n        }\n        if (isDarkMode === true) {\n          document.body.className = document.body.className.replace(/light-mode/g, 'dark-mode')\n          emit('set-is-dark-mode', true)\n        }\n      },\n    )\n\n    const categoryIconNamesDic = computed(() =>\n      Object.entries(pepiconCategoryDic).reduce((dic, [iconName, iconCategory]) => {\n        if (!(iconCategory in dic)) dic[iconCategory] = []\n        const iconNonExistent = _.config.type === 'print' && iconName.endsWith('-filled')\n        if (iconNonExistent) return dic\n        const searchText = cleanupForSearch(_.searchInput)\n        if (searchText) {\n          const _synonyms: string[] = [\n            ...synonyms[iconName as Pepicon],\n            ...synonymsJa[iconName as Pepicon],\n            iconCategory,\n          ]\n          const searchHit =\n            cleanupForSearch(iconName).includes(searchText) ||\n            _synonyms?.some((syn) => cleanupForSearch(syn).includes(searchText))\n          if (!searchHit) return dic\n        }\n        dic[iconCategory].push(iconName)\n        return dic\n      }, {} as { [category: string]: string[] }),\n    )\n\n    function openTileDialog(iconName: string): void {\n      Dialog.create({\n        component: 'DialogWrapper',\n        dialogProps: { style: `border-radius: 1rem` },\n        slotComponent: 'IconInfo',\n        slotProps: {\n          config: { ...configComputed.value, name: iconName },\n          configOptionButtons: _.config,\n        },\n      })\n    }\n\n    return {\n      _,\n      setUrlQuery,\n      configComputed,\n      categories,\n      categoryIconNamesDic,\n      openTileDialog,\n      scrollTo,\n    }\n  },\n})\n</script>\n");

/***/ }),

/***/ "69e7":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"260\" height=\"260\" viewBox=\"0 0 260 260\">\n    <defs>\n      <linearGradient id=\"colorring-a\" x1=\"0%\" x2=\"82.077%\" y1=\"33.333%\" y2=\"70.311%\">\n        <stop offset=\"0%\" stop-color=\"#01E400\" />\n        <stop offset=\"100%\" stop-color=\"#FEFF01\" />\n      </linearGradient>\n      <linearGradient id=\"colorring-b\" x1=\"-119.339%\" x2=\"-119.339%\" y1=\"7.034%\" y2=\"90.018%\">\n        <stop offset=\"0%\" stop-color=\"#FEFF01\" />\n        <stop offset=\"100%\" stop-color=\"#FF7E00\" />\n      </linearGradient>\n      <linearGradient id=\"colorring-c\" x1=\"81.646%\" x2=\"0%\" y1=\"26.396%\" y2=\"55.787%\">\n        <stop offset=\"0%\" stop-color=\"#FF7E00\" />\n        <stop offset=\"100%\" stop-color=\"#FB0300\" />\n      </linearGradient>\n      <linearGradient id=\"colorring-d\" x1=\"100%\" x2=\"19.805%\" y1=\"56.141%\" y2=\"28.17%\">\n        <stop offset=\"0%\" stop-color=\"#FB0300\" />\n        <stop offset=\"100%\" stop-color=\"#9B004A\" />\n      </linearGradient>\n      <linearGradient id=\"colorring-e\" x1=\"194.094%\" x2=\"194.094%\" y1=\"92.549%\" y2=\"6.231%\">\n        <stop offset=\"0%\" stop-color=\"#9B004A\" />\n        <stop offset=\"100%\" stop-color=\"#00117D\" />\n      </linearGradient>\n      <linearGradient id=\"colorring-f\" x1=\"15.092%\" x2=\"100%\" y1=\"70.888%\" y2=\"40.756%\">\n        <stop offset=\"0%\" stop-color=\"#00117D\" />\n        <stop offset=\"100%\" stop-color=\"#01E400\" />\n      </linearGradient>\n    </defs>\n    <g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"20\" transform=\"translate(10 10)\">\n      <path stroke=\"url(#colorring-a)\" d=\"M120 0c42.872 0 82.487 22.872 103.923 60\" />\n      <path stroke=\"url(#colorring-b)\" d=\"M223.923 60c21.436 37.128 21.436 82.872 0 120\" />\n      <path stroke=\"url(#colorring-c)\" d=\"M224 179.9c-21.493 37.19-61.214 60.1-104.2 60.1\" />\n      <path stroke=\"url(#colorring-d)\" d=\"M120.077 240c-42.904 0-82.548-22.872-104-60\" />\n      <path stroke=\"url(#colorring-e)\" d=\"M16.09 180.03a119.972 119.972 0 0 1 0-120.03\" />\n      <path stroke=\"url(#colorring-f)\" d=\"M16 60.15C37.472 22.93 77.155 0 120.1 0\" />\n    </g>\n  </svg>\n</template>\n\n<script>\nexport default {\n  name: 'ColorRingSvg',\n}\n</script>\n");

/***/ }),

/***/ "7309":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"my-component\"></div>\n</template>\n\n<style lang=\"sass\">\n// .my-component\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, toRef, Ref } from '@vue/composition-api'\n\nexport default defineComponent({\n  name: 'MyComponent',\n  props: {\n    title: { type: String, required: true },\n  },\n  setup (props) {\n    return {}\n  },\n})\n</script>\n");

/***/ }),

/***/ "79e8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"pep-header-decoration-light\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"1158.942\"\n      height=\"143.376\"\n      viewBox=\"0 0 1158.942 143.376\"\n    >\n      <g :style=\"`color: ${colors.green}`\">\n        <g id=\"グリーンギザギザ\" transform=\"translate(-4 22.16)\">\n          <path\n            id=\"グリーンギザギザ-2\"\n            data-name=\"グリーンギザギザ\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"matrix(-0.978, -0.208, 0.208, -0.978, 262.409, 88.324)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"グリーンギザギザ線\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"matrix(-0.978, -0.208, 0.208, -0.978, 262.409, 82.472)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルーギザギザ\" transform=\"translate(7 23.16)\">\n          <path\n            id=\"ブルーギザギザ-2\"\n            data-name=\"ブルーギザギザ\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"matrix(0.485, 0.875, -0.875, 0.485, 52.43, 55.879)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"ブルーギザギザ線\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"matrix(0.485, 0.875, -0.875, 0.485, 54.102, 52.535)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.yellow}`\">\n        <g id=\"イエローギザギザ\" transform=\"translate(-3 10.16)\">\n          <path\n            id=\"イエローギザギザ-2\"\n            data-name=\"イエローギザギザ\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"translate(126.805 45.742) rotate(-151)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"イエローギザギザ線\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"translate(126.805 50.758) rotate(-151)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルーギザギザ-3\" data-name=\"ブルーギザギザ\" transform=\"translate(24 26.16)\">\n          <path\n            id=\"ブルーギザギザ-4\"\n            data-name=\"ブルーギザギザ\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"matrix(-0.934, 0.358, -0.358, -0.934, 323.494, 43.789)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"ブルーギザギザ線-2\"\n            data-name=\"ブルーギザギザ線\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"matrix(-0.934, 0.358, -0.358, -0.934, 323.494, 40.445)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g id=\"ピンクギザギザ\" transform=\"translate(-3 10.16)\">\n          <path\n            id=\"ピンクギザギザ-2\"\n            data-name=\"ピンクギザギザ\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"matrix(-0.788, 0.616, -0.616, -0.788, 218.234, 50.748)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"ピンクギザギザ線\"\n            d=\"M0,6.2,5.007,0,9.7,6.2,14.109,0l4.214,6.2L22.444,0s3.227,4.651,4.435,6.2\"\n            transform=\"matrix(-0.788, 0.616, -0.616, -0.788, 218.234, 46.568)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g id=\"ピンク丸\" transform=\"translate(-3 -0.84)\">\n          <circle\n            id=\"ピンク丸-2\"\n            data-name=\"ピンク丸\"\n            cx=\"15.5\"\n            cy=\"15.5\"\n            r=\"15.5\"\n            transform=\"translate(25.942 8.267)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ピンク丸線\"\n            transform=\"translate(19.942 8.267)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <ellipse cx=\"16.5\" cy=\"16\" rx=\"16.5\" ry=\"16\" stroke=\"none\" />\n            <ellipse cx=\"16.5\" cy=\"16\" rx=\"15.75\" ry=\"15.25\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.yellow}`\">\n        <g id=\"イエロー三角\" transform=\"translate(4 34.16)\">\n          <path\n            id=\"イエロー三角-2\"\n            data-name=\"イエロー三角\"\n            d=\"M19.647,0,39.294,21.737H0Z\"\n            transform=\"matrix(0.819, 0.574, -0.574, 0.819, 115.481, 57.175)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"イエロー三角線\"\n            transform=\"matrix(0.819, 0.574, -0.574, 0.819, 119.648, 60.519)\"\n            fill=\"none\"\n          >\n            <path d=\"M19.647,0,39.294,21.737H0Z\" stroke=\"none\" />\n            <path\n              d=\"M 19.64711952209473 2.237003326416016 L 3.377677917480469 20.23723983764648 L 35.91656112670898 20.23723983764648 L 19.64711952209473 2.237003326416016 M 19.64711952209473 -1.9073486328125e-06 L 39.29423904418945 21.73723983764648 L 0 21.73723983764648 L 19.64711952209473 -1.9073486328125e-06 Z\"\n              stroke=\"none\"\n              :fill=\"strokeColor\"\n            />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.green}`\">\n        <g id=\"グリーン四角\" transform=\"translate(21 13.16)\">\n          <rect\n            id=\"グリーン四角-2\"\n            data-name=\"グリーン四角\"\n            width=\"25.081\"\n            height=\"25.081\"\n            transform=\"translate(123.204 13.511) rotate(-8)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"グリーン四角線\"\n            transform=\"translate(118.204 9.331) rotate(-8)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <rect width=\"25.081\" height=\"25.081\" stroke=\"none\" />\n            <rect x=\"0.75\" y=\"0.75\" width=\"23.581\" height=\"23.581\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g id=\"ピンク丸-3\" data-name=\"ピンク丸\" transform=\"translate(-8 26.16)\">\n          <circle\n            id=\"ピンク丸-4\"\n            data-name=\"ピンク丸\"\n            cx=\"7.5\"\n            cy=\"7.5\"\n            r=\"7.5\"\n            transform=\"translate(184.391 72.267)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ピンク丸線-2\"\n            data-name=\"ピンク丸線\"\n            transform=\"translate(187.382 74.267)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <circle cx=\"7.5\" cy=\"7.5\" r=\"7.5\" stroke=\"none\" />\n            <circle cx=\"7.5\" cy=\"7.5\" r=\"6.75\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルー三角\" transform=\"translate(11 0.16)\">\n          <path\n            id=\"ブルー三角-2\"\n            data-name=\"ブルー三角\"\n            d=\"M19.647,0,39.294,21.737H0Z\"\n            transform=\"translate(228.395 26.799) rotate(-43)\"\n            :fill=\"shadowColor\"\n          />\n          <g id=\"ブルー三角線\" transform=\"translate(225.895 34.323) rotate(-43)\" fill=\"none\">\n            <path d=\"M19.647,0,39.294,21.737H0Z\" stroke=\"none\" />\n            <path\n              d=\"M 19.64711952209473 2.237003326416016 L 3.377677917480469 20.23723983764648 L 35.91656112670898 20.23723983764648 L 19.64711952209473 2.237003326416016 M 19.64711952209473 -1.9073486328125e-06 L 39.29423904418945 21.73723983764648 L 0 21.73723983764648 L 19.64711952209473 -1.9073486328125e-06 Z\"\n              stroke=\"none\"\n              :fill=\"strokeColor\"\n            />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g id=\"ピンク四角\" transform=\"translate(21 44.16)\">\n          <rect\n            id=\"ピンク四角-2\"\n            data-name=\"ピンク四角\"\n            width=\"25.081\"\n            height=\"25.081\"\n            transform=\"translate(318.765 57.173) rotate(25)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ピンク四角線\"\n            transform=\"translate(321.273 63.026) rotate(25)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <rect width=\"25.081\" height=\"25.081\" stroke=\"none\" />\n            <rect x=\"0.75\" y=\"0.75\" width=\"23.581\" height=\"23.581\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.yellow}`\">\n        <g id=\"イエロー丸\" transform=\"translate(40 5.16)\">\n          <ellipse\n            id=\"イエロー丸-2\"\n            data-name=\"イエロー丸\"\n            cx=\"10\"\n            cy=\"10.5\"\n            rx=\"10\"\n            ry=\"10.5\"\n            transform=\"translate(329.942 5.267)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"イエロー丸線\"\n            transform=\"translate(323.942 5.267)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <circle cx=\"10\" cy=\"10\" r=\"10\" stroke=\"none\" />\n            <circle cx=\"10\" cy=\"10\" r=\"9.25\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルー四角\" transform=\"translate(0 44.16)\">\n          <rect\n            id=\"ブルー四角-2\"\n            data-name=\"ブルー四角\"\n            width=\"25.081\"\n            height=\"25.081\"\n            transform=\"translate(5.016 70.198) rotate(-8)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ブルー四角線\"\n            transform=\"translate(0 74.378) rotate(-8)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <rect width=\"25.081\" height=\"25.081\" stroke=\"none\" />\n            <rect x=\"0.75\" y=\"0.75\" width=\"23.581\" height=\"23.581\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.green}`\">\n        <g id=\"グリーン四角-3\" data-name=\"グリーン四角\" transform=\"translate(444 -5.84)\">\n          <rect\n            id=\"グリーン四角-4\"\n            data-name=\"グリーン四角\"\n            width=\"25.081\"\n            height=\"25.081\"\n            transform=\"translate(123.204 13.511) rotate(-8)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"グリーン四角線-2\"\n            data-name=\"グリーン四角線\"\n            transform=\"translate(118.204 9.331) rotate(-8)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <rect width=\"25.081\" height=\"25.081\" stroke=\"none\" />\n            <rect x=\"0.75\" y=\"0.75\" width=\"23.581\" height=\"23.581\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.green}`\">\n        <g\n          id=\"グリーンギザギザ-3\"\n          data-name=\"グリーンギザギザ\"\n          transform=\"translate(1013.117 39.052)\"\n        >\n          <path\n            id=\"グリーンギザギザ-4\"\n            data-name=\"グリーンギザギザ\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"translate(27.581 6.065) rotate(168)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"グリーンギザギザ線-2\"\n            data-name=\"グリーンギザギザ線\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"translate(27.581 11.917) rotate(168)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルーギザギザ-5\" data-name=\"ブルーギザギザ\" transform=\"translate(835.007 43.982)\">\n          <path\n            id=\"ブルーギザギザ-6\"\n            data-name=\"ブルーギザギザ\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(0.485, -0.875, 0.875, 0.485, 0, 23.509)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"ブルーギザギザ線-3\"\n            data-name=\"ブルーギザギザ線\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(0.485, -0.875, 0.875, 0.485, 1.672, 26.854)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g\n          id=\"ピンクギザギザ-3\"\n          data-name=\"ピンクギザギザ\"\n          transform=\"matrix(0.883, 0.469, -0.469, 0.883, 470.194, 6.005)\"\n        >\n          <path\n            id=\"ピンクギザギザ-4\"\n            data-name=\"ピンクギザギザ\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(0.485, -0.875, 0.875, 0.485, 0, 23.509)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"ピンクギザギザ線-2\"\n            data-name=\"ピンクギザギザ線\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(0.485, -0.875, 0.875, 0.485, 1.672, 26.854)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.yellow}`\">\n        <g\n          id=\"イエローギザギザ-3\"\n          data-name=\"イエローギザギザ\"\n          transform=\"translate(881.295 88.618)\"\n        >\n          <path\n            id=\"イエローギザギザ-4\"\n            data-name=\"イエローギザギザ\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(-0.875, 0.485, -0.485, -0.875, 26.515, 10.44)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"イエローギザギザ線-2\"\n            data-name=\"イエローギザギザ線\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(-0.875, 0.485, -0.485, -0.875, 26.515, 5.423)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルーギザギザ-7\" data-name=\"ブルーギザギザ\" transform=\"translate(1083.177 73.954)\">\n          <path\n            id=\"ブルーギザギザ-8\"\n            data-name=\"ブルーギザギザ\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"translate(25.094 15.422) rotate(-159)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"ブルーギザギザ線-4\"\n            data-name=\"ブルーギザギザ線\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"translate(25.094 18.766) rotate(-159)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g id=\"ピンクギザギザ-5\" data-name=\"ピンクギザギザ\" transform=\"translate(971.236 72.079)\">\n          <path\n            id=\"ピンクギザギザ-6\"\n            data-name=\"ピンクギザギザ\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(-0.788, -0.616, 0.616, -0.788, 21.181, 21.435)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"ピンクギザギザ線-3\"\n            data-name=\"ピンクギザギザ線\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(-0.788, -0.616, 0.616, -0.788, 21.181, 25.615)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.yellow}`\">\n        <g\n          id=\"イエローギザギザ-5\"\n          data-name=\"イエローギザギザ\"\n          transform=\"translate(538.236 112.079)\"\n        >\n          <path\n            id=\"イエローギザギザ-6\"\n            data-name=\"イエローギザギザ\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(-0.788, -0.616, 0.616, -0.788, 21.181, 21.435)\"\n            :fill=\"shadowColor\"\n          />\n          <path\n            id=\"イエローギザギザ線-3\"\n            data-name=\"イエローギザギザ線\"\n            d=\"M0,0,5.007,6.2,9.7,0l4.409,6.2L18.323,0l4.121,6.2S25.672,1.55,26.879,0\"\n            transform=\"matrix(-0.788, -0.616, 0.616, -0.788, 21.181, 25.615)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"1.5\"\n          />\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g id=\"ピンク丸-5\" data-name=\"ピンク丸\" transform=\"translate(797.942 99.109)\">\n          <ellipse\n            id=\"ピンク丸-6\"\n            data-name=\"ピンク丸\"\n            cx=\"15.5\"\n            cy=\"15.5\"\n            rx=\"15.5\"\n            ry=\"15.5\"\n            transform=\"translate(6 1)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ピンク丸線-3\"\n            data-name=\"ピンク丸線\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <ellipse cx=\"16.5\" cy=\"16\" rx=\"16.5\" ry=\"16\" stroke=\"none\" />\n            <ellipse cx=\"16.5\" cy=\"16\" rx=\"15.75\" ry=\"15.25\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.green}`\">\n        <g id=\"グリーン丸\" transform=\"translate(434.942 106.109)\">\n          <ellipse\n            id=\"グリーン丸-2\"\n            data-name=\"グリーン丸\"\n            cx=\"15.5\"\n            cy=\"15.5\"\n            rx=\"15.5\"\n            ry=\"15.5\"\n            transform=\"translate(6 1)\"\n            :fill=\"shadowColor\"\n          />\n          <g id=\"グリーン丸線\" fill=\"none\" :stroke=\"strokeColor\" stroke-width=\"1.5\">\n            <ellipse cx=\"16.5\" cy=\"16\" rx=\"16.5\" ry=\"16\" stroke=\"none\" />\n            <ellipse cx=\"16.5\" cy=\"16\" rx=\"15.75\" ry=\"15.25\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.yellow}`\">\n        <g id=\"イエロー三角-3\" data-name=\"イエロー三角\" transform=\"translate(888.013 14.512)\">\n          <path\n            id=\"イエロー三角-4\"\n            data-name=\"イエロー三角\"\n            d=\"M19.647,0,39.294,21.737H0Z\"\n            transform=\"matrix(-0.819, 0.574, -0.574, -0.819, 44.656, 21.15)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"イエロー三角線-2\"\n            data-name=\"イエロー三角線\"\n            transform=\"matrix(-0.819, 0.574, -0.574, -0.819, 48.823, 17.806)\"\n            fill=\"none\"\n          >\n            <path d=\"M19.647,0,39.294,21.737H0Z\" stroke=\"none\" />\n            <path\n              d=\"M 19.64712142944336 2.237003326416016 L 3.377677917480469 20.23723983764648 L 35.91656494140625 20.23723983764648 L 19.64712142944336 2.237003326416016 M 19.64712142944336 -1.9073486328125e-06 L 39.29424285888672 21.73723983764648 L 0 21.73723983764648 L 19.64712142944336 -1.9073486328125e-06 Z\"\n              stroke=\"none\"\n              :fill=\"strokeColor\"\n            />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.yellow}`\">\n        <g id=\"イエロー三角-5\" data-name=\"イエロー三角\" transform=\"translate(699.013 7.512)\">\n          <path\n            id=\"イエロー三角-6\"\n            data-name=\"イエロー三角\"\n            d=\"M19.647,0,39.294,21.737H0Z\"\n            transform=\"matrix(-0.819, 0.574, -0.574, -0.819, 44.656, 21.15)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"イエロー三角線-3\"\n            data-name=\"イエロー三角線\"\n            transform=\"matrix(-0.819, 0.574, -0.574, -0.819, 48.823, 17.806)\"\n            fill=\"none\"\n          >\n            <path d=\"M19.647,0,39.294,21.737H0Z\" stroke=\"none\" />\n            <path\n              d=\"M 19.64712142944336 2.237003326416016 L 3.377677917480469 20.23723983764648 L 35.91656494140625 20.23723983764648 L 19.64712142944336 2.237003326416016 M 19.64712142944336 -1.9073486328125e-06 L 39.29424285888672 21.73723983764648 L 0 21.73723983764648 L 19.64712142944336 -1.9073486328125e-06 Z\"\n              stroke=\"none\"\n              :fill=\"strokeColor\"\n            />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.green}`\">\n        <g id=\"グリーン四角-5\" data-name=\"グリーン四角\" transform=\"translate(920.204 98.028)\">\n          <rect\n            id=\"グリーン四角-6\"\n            data-name=\"グリーン四角\"\n            width=\"25.081\"\n            height=\"25.081\"\n            transform=\"translate(8.491 0) rotate(8)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"グリーン四角線-3\"\n            data-name=\"グリーン四角線\"\n            transform=\"translate(3.491 4.18) rotate(8)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <rect width=\"25.081\" height=\"25.081\" stroke=\"none\" />\n            <rect x=\"0.75\" y=\"0.75\" width=\"23.581\" height=\"23.581\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルー四角-3\" data-name=\"ブルー四角\" transform=\"translate(655.204 105.028)\">\n          <rect\n            id=\"ブルー四角-4\"\n            data-name=\"ブルー四角\"\n            width=\"25.081\"\n            height=\"25.081\"\n            transform=\"translate(8.491 0) rotate(8)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ブルー四角線-2\"\n            data-name=\"ブルー四角線\"\n            transform=\"translate(3.491 4.18) rotate(8)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <rect width=\"25.081\" height=\"25.081\" stroke=\"none\" />\n            <rect x=\"0.75\" y=\"0.75\" width=\"23.581\" height=\"23.581\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g id=\"ピンク丸-7\" data-name=\"ピンク丸\" transform=\"translate(957.391 34.109)\">\n          <ellipse\n            id=\"ピンク丸-8\"\n            data-name=\"ピンク丸\"\n            cx=\"7.5\"\n            cy=\"7.5\"\n            rx=\"7.5\"\n            ry=\"7.5\"\n            transform=\"translate(0 2)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ピンク丸線-4\"\n            data-name=\"ピンク丸線\"\n            transform=\"translate(2.991)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <ellipse cx=\"7.5\" cy=\"7.5\" rx=\"7.5\" ry=\"7.5\" stroke=\"none\" />\n            <ellipse cx=\"7.5\" cy=\"7.5\" rx=\"6.75\" ry=\"6.75\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルー三角-3\" data-name=\"ブルー三角\" transform=\"translate(1013.895 89.155)\">\n          <path\n            id=\"ブルー三角-4\"\n            data-name=\"ブルー三角\"\n            d=\"M19.647,0,39.294,21.737H0Z\"\n            transform=\"translate(31.238 50.221) rotate(-137)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ブルー三角線-2\"\n            data-name=\"ブルー三角線\"\n            transform=\"translate(28.738 42.696) rotate(-137)\"\n            fill=\"none\"\n          >\n            <path d=\"M19.647,0,39.294,21.737H0Z\" stroke=\"none\" />\n            <path\n              d=\"M 19.64712142944336 2.237003326416016 L 3.377677917480469 20.23723983764648 L 35.91656494140625 20.23723983764648 L 19.64712142944336 2.237003326416016 M 19.64712142944336 0 L 39.29424285888672 21.73723983764648 L 0 21.73723983764648 L 19.64712142944336 0 Z\"\n              stroke=\"none\"\n              :fill=\"strokeColor\"\n            />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.pink}`\">\n        <g id=\"ピンク四角-3\" data-name=\"ピンク四角\" transform=\"translate(1110.165 9.019)\">\n          <rect\n            id=\"ピンク四角-4\"\n            data-name=\"ピンク四角\"\n            width=\"25.081\"\n            height=\"25.081\"\n            transform=\"translate(0 16.452) rotate(-25)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ピンク四角線-2\"\n            data-name=\"ピンク四角線\"\n            transform=\"translate(2.508 10.6) rotate(-25)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <rect width=\"25.081\" height=\"25.081\" stroke=\"none\" />\n            <rect x=\"0.75\" y=\"0.75\" width=\"23.581\" height=\"23.581\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.yellow}`\">\n        <g id=\"イエロー丸-3\" data-name=\"イエロー丸\" transform=\"translate(1132.942 118.109)\">\n          <ellipse\n            id=\"イエロー丸-4\"\n            data-name=\"イエロー丸\"\n            cx=\"10\"\n            cy=\"10.5\"\n            rx=\"10\"\n            ry=\"10.5\"\n            transform=\"translate(6)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"イエロー丸線-2\"\n            data-name=\"イエロー丸線\"\n            transform=\"translate(0 1)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <ellipse cx=\"10\" cy=\"10\" rx=\"10\" ry=\"10\" stroke=\"none\" />\n            <ellipse cx=\"10\" cy=\"10\" rx=\"9.25\" ry=\"9.25\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n      <g :style=\"`color: ${colors.blue}`\">\n        <g id=\"ブルー四角-5\" data-name=\"ブルー四角\" transform=\"translate(781 6.16)\">\n          <rect\n            id=\"ブルー四角-6\"\n            data-name=\"ブルー四角\"\n            width=\"25.081\"\n            height=\"25.081\"\n            transform=\"translate(8.507 4.18) rotate(8)\"\n            :fill=\"shadowColor\"\n          />\n          <g\n            id=\"ブルー四角線-3\"\n            data-name=\"ブルー四角線\"\n            transform=\"translate(3.491 0) rotate(8)\"\n            fill=\"none\"\n            :stroke=\"strokeColor\"\n            stroke-width=\"1.5\"\n          >\n            <rect width=\"25.081\" height=\"25.081\" stroke=\"none\" />\n            <rect x=\"0.75\" y=\"0.75\" width=\"23.581\" height=\"23.581\" fill=\"none\" />\n          </g>\n        </g>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<style lang=\"sass\">\n// $\n.pep-header-decoration-light\n  > svg\n    overflow: visible\n    max-width: 200vw\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, toRef, Ref } from '@vue/composition-api'\nimport { cssVar } from '../../helpers/colorHelpers'\n// import { roll } from 'roll-anything'\n\nconst randomAnimeFloatPerIcon = [\n  8, // g\n  3, //g\n  18,\n  0,\n  24,\n  5,\n  15,\n  8,\n  9,\n  17,\n  10,\n  16,\n  7,\n  0,\n  11,\n  1,\n  14,\n  19,\n  2,\n  14,\n  18,\n  14, // g\n  23, // g\n  6,\n  9,\n  18,\n  22,\n  24,\n  19,\n  24,\n  14,\n  7,\n]\n\nexport default defineComponent({\n  name: 'PepHeaderDecorationLight',\n  props: {\n    isDarkMode: { type: Boolean, default: false },\n  },\n  mounted() {\n    const shapes = this.$el.querySelectorAll('svg > g')\n    shapes.forEach((g, index) => {\n      g.classList.add(`anime-float`)\n      g.classList.add(`anime-float-${randomAnimeFloatPerIcon[index]}`)\n    })\n  },\n  setup(props) {\n    const shadowColor = computed(() => (props.isDarkMode ? 'black' : 'currentColor'))\n    const strokeColor = computed(() => (props.isDarkMode ? 'currentColor' : 'black'))\n    const colors = {\n      green: cssVar('sig-green'),\n      yellow: cssVar('sig-yellow'),\n      blue: cssVar('sig-blue'),\n      pink: cssVar('sig-pink'),\n    }\n\n    return { strokeColor, shadowColor, colors }\n  },\n})\n</script>\n");

/***/ }),

/***/ "8ec6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <q-layout view=\"hhh lpr fff\" style=\"overflow-x: hidden\">\n    <header>\n      <PepHero class=\"full-width mb-md\">\n        <!-- <PepHeaderDecoration /> -->\n        <PepHeaderDecorationLight :isDarkMode=\"isDarkMode\" />\n      </PepHero>\n    </header>\n    <q-page-container>\n      <router-view @set-is-dark-mode=\"(newVal) => (isDarkMode = newVal)\" />\n    </q-page-container>\n    <div class=\"pb-xxxl\"></div>\n    <q-footer class=\"footer\">\n      <div class=\"mb-md\">\n        Pepicons was made with 💜 by\n        <PepLink href=\"https://cycraft.co\" content=\"cycraft.co\" retroUnderline />\n      </div>\n      <div>© Copyright CyCraft, {{ new Date().getFullYear() }}</div>\n    </q-footer>\n  </q-layout>\n</template>\n\n<style lang=\"sass\">\n.footer\n  +pa($xl)\n  +t-body2()\n  +flex-center()\n  +C(color, letters)\n  opacity: 0.9\n  +C(background-color, white)\n.dark-mode\n  .footer\n    +C(background-color, moonlight)\n    +C(color, white)\n</style>\n\n<script>\n// import PepHeaderDecoration from '../components/atoms/PepHeaderDecoration.vue'\nimport PepHeaderDecorationLight from '../components/atoms/PepHeaderDecorationLight.vue'\nimport PepHero from '../components/atoms/PepHero.vue'\nimport PepLink from '../components/atoms/PepLink.vue'\n\nexport default {\n  name: 'MainLayout',\n  components: { PepHero, PepLink, PepHeaderDecorationLight /** PepHeaderDecoration */ },\n  data() {\n    return { isDarkMode: false }\n  },\n}\n</script>\n");

/***/ }),

/***/ "8f80":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <Stack class=\"pickers pa-xs\" classes=\"justify-center\">\n    <Picker\n      kind=\"type\"\n      :value=\"value\"\n      @input=\"(newVal) => $emit('input', newVal)\"\n      :configComputed=\"configComputed\"\n    />\n    <Picker\n      class=\"_middle-section\"\n      kind=\"color\"\n      :value=\"value\"\n      @input=\"(newVal) => $emit('input', newVal)\"\n      :configComputed=\"configComputed\"\n    />\n    <Picker\n      kind=\"background\"\n      :value=\"value\"\n      @input=\"(newVal) => $emit('input', newVal)\"\n      :configComputed=\"configComputed\"\n    />\n    <!-- <Picker kind=\"stroke\" :value=\"value\" @input=\"(newVal) => $emit('input', newVal)\" :configComputed=\"configComputed\" /> -->\n  </Stack>\n</template>\n\n<style lang=\"sass\">\n//$\n.pickers\n  ._middle-section\n    flex: unset\n    order: 3\n    +media-sm(flex, 1)\n    +media-sm(order, unset)\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from '@vue/composition-api'\nimport Picker from './Picker.vue'\nimport Stack from '../atoms/Stack.vue'\nimport { defaultsIconConfig, IconConfig } from '../../types'\n\nexport default defineComponent({\n  name: 'Pickers',\n  components: { Picker, Stack },\n  props: {\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string } & { isDarkMode: boolean }}\n     */\n    value: {\n      type: Object as PropType<IconConfig & { isDarkMode: boolean }>,\n      default: () => ({ ...defaultsIconConfig({ isDarkMode: false }) }),\n    },\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string }}\n     */\n    configComputed: {\n      type: Object as PropType<IconConfig>,\n      default: () => ({ ...defaultsIconConfig() }),\n    },\n  },\n  setup() {\n    return {}\n  },\n})\n</script>\n");

/***/ }),

/***/ "95ba":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<!DOCTYPE html>\n<html>\n  <head>\n    <title><%= productName %></title>\n\n    <meta charset=\"utf-8\" />\n    <meta name=\"description\" content=\"<%= productDescription %>\" />\n    <meta name=\"format-detection\" content=\"telephone=no\" />\n    <meta name=\"msapplication-tap-highlight\" content=\"no\" />\n    <meta\n      name=\"viewport\"\n      content=\"user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width<% if (ctx.mode.cordova || ctx.mode.capacitor) { %>, viewport-fit=cover<% } %>\"\n    />\n\n    <link rel=\"icon\" type=\"image/png\" sizes=\"128x128\" href=\"icons/favicon-128x128.png\" />\n    <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"icons/favicon-96x96.png\" />\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"icons/favicon-32x32.png\" />\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"icons/favicon-16x16.png\" />\n    <link rel=\"icon\" type=\"image/ico\" href=\"favicon.ico\" />\n  </head>\n  <body>\n    <!-- DO NOT touch the following DIV -->\n    <div id=\"q-app\"></div>\n  </body>\n</html>\n");

/***/ }),

/***/ "a0bd":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <QInput class=\"pep-input\" v-bind=\"propsToPass\" v-on=\"eventsToPass\">\n    <template v-slot:prepend v-if=\"iconConfig\">\n      <Pepicon v-bind=\"iconConfig\" />\n    </template>\n  </QInput>\n</template>\n\n<style lang=\"sass\">\n// $\n.pep-input\n  .q-field__control\n    transition: background-color 500ms\n    border-radius: 16px\n    +C(background-color, white)\n  .q-field__control:before\n    border: none\n    transition: border-color 0.36s cubic-bezier(0.4, 0, 0.2, 1)\n  .q-field__control:hover\n    +C(background-color, white)\n  &.q-field--focused\n    .q-field__control\n      +C(background-color, white)\n.dark-mode .pep-input\n  .q-field__control\n    +C(background-color, moonlight)\n  .q-field__control:hover\n    +C(background-color, moonlight)\n  &.q-field--focused\n    .q-field__control\n      +C(background-color, moonlight)\n</style>\n\n<script lang=\"ts\">\nimport { QInput } from 'quasar'\nimport { Pepicon } from 'vue-pepicons'\nimport { defineComponent, PropType, computed, ref, toRef, Ref } from '@vue/composition-api'\nimport { defaultsIconConfig, IconConfig } from '../../types'\n\nexport default defineComponent({\n  name: 'PepInput',\n  components: { QInput, Pepicon },\n  props: {\n    value: { type: String, default: '' },\n    color: { type: String, default: '#AB92F0' },\n    isDarkMode: { type: Boolean },\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string }}\n     */\n    iconConfig: {\n      type: Object as PropType<IconConfig>,\n      default: () => ({ ...defaultsIconConfig() }),\n    },\n  },\n  setup(props, { attrs, listeners, emit }) {\n    const propsToPass = computed(() => ({\n      ...attrs,\n      outlined: true,\n      color: props.color,\n      value: props.value,\n      dark: props.isDarkMode,\n    }))\n    const eventsToPass = {\n      ...listeners,\n    }\n\n    return { propsToPass, eventsToPass }\n  },\n})\n</script>\n");

/***/ }),

/***/ "a73f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div>\n    <div class=\"pep-header\" />\n    <q-resize-observer @resize=\"onResize\" />\n  </div>\n</template>\n\n<style lang=\"sass\">\n// $max-width: 1186px\n// $max-height: 143.48px\n// $max-height: 300px\n// $max-width: 100vw\n// $max-height: 30vw\n// .pep-header\n//   width: $max-width\n//   height: $max-height\n//   > *\n//     width: 100%\n//     height: 100%\n\n// header and grid-lines heights\n$h-xs: 15px\n$h-sm: 20px\n$h-md: 20px\n$h-lg: 25px\n.pep-header\n  height: $h-xs * 9 - 1\n  +media-sm(height, $h-sm * 9 - 1)\n  +media-md(height, $h-md * 9 - 1)\n  +media-lg(height, $h-lg * 9 - 1)\n  > *\n    width: 100%\n    height: 100%\n\n</style>\n\n<script>\nimport PepHeader from '../pep-header.js'\n\nexport default {\n  name: 'PepHeaderDecoration',\n  props: {},\n  data () {\n    return { header: null }\n  },\n  mounted() {\n    const header = new PepHeader('.pep-header')\n    this.header = header\n    header.init()\n    header.animate()\n  },\n  destroyed() {\n    if (!window.renderer) return\n    window.renderer.forceContextLoss()\n    window.renderer.dispose()\n    window.renderer.domElement = null\n    window.renderer = null\n  },\n  methods: {\n    onResize ({ width, height }) {\n      // if (!this.header) return\n      // // width and height are \"numbers\"\n      // // it's the height and width of the .pep-hero\n\n      // this.header.updateCanvasSize({width, height})\n    },\n  },\n  computed: {},\n}\n</script>\n");

/***/ }),

/***/ "b64f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"fullscreen bg-blue text-white text-center q-pa-md flex flex-center\">\n    <div>\n      <div style=\"font-size: 30vh\">\n        404\n      </div>\n\n      <div class=\"text-h2\" style=\"opacity:.4\">\n        Oops. Nothing here...\n      </div>\n\n      <q-btn\n        class=\"q-mt-xl\"\n        color=\"white\"\n        text-color=\"blue\"\n        unelevated\n        to=\"/\"\n        label=\"Go Home\"\n        no-caps\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'Error404',\n})\n</script>\n");

/***/ }),

/***/ "b7ca":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <Stack class=\"picker\" v-if=\"kind === 'type'\" classes=\"justify-center\">\n    <!-- <div class=\"text-subtitle1 mb-sm\">\n      {{ kind === 'type' ? 'Style' : kind }}\n    </div> -->\n    <IconButton\n      :iconConfig=\"{\n        name: 'can',\n        type: 'print',\n        color: value.isDarkMode ? 'black' : value.color,\n        stroke: value.isDarkMode ? value.color : 'black',\n      }\"\n      :backgroundColor=\"value.isDarkMode ? moonlight : 'white'\"\n      :isActive=\"value.type === 'print'\"\n      :activeColor=\"value.color\"\n      animationClass=\"anime-shake\"\n      @click=\"set('type', 'print')\"\n      ><QTooltip\n        anchor=\"top middle\"\n        self=\"bottom middle\"\n        transition-show=\"jump-up\"\n        transition-hide=\"jump-down\"\n        content-class=\"picker-tooltip _leftmost\"\n        >Print ❏</QTooltip\n      ></IconButton\n    >\n    <IconButton\n      :iconConfig=\"{ ...value, name: 'can', type: 'pop' }\"\n      :backgroundColor=\"value.isDarkMode ? moonlight : 'white'\"\n      :isActive=\"value.type === 'pop'\"\n      animationClass=\"anime-shake\"\n      @click=\"set('type', 'pop')\"\n      ><QTooltip\n        anchor=\"top middle\"\n        self=\"bottom middle\"\n        transition-show=\"jump-up\"\n        transition-hide=\"jump-down\"\n        content-class=\"picker-tooltip\"\n        >Pop!</QTooltip\n      ></IconButton\n    >\n  </Stack>\n  <Stack class=\"picker\" v-else-if=\"kind === 'color'\" classes=\"justify-center\">\n    <IconButton\n      v-for=\"c in colorSelection\"\n      :key=\"c\"\n      :iconConfig=\"{ color: value.color }\"\n      :backgroundColor=\"c\"\n      @click=\"set('color', c)\"\n      :isActive=\"value.color === c\"\n    />\n    <IconButton\n      :iconConfig=\"{ ...configComputed, name: 'color-picker' }\"\n      :backgroundColor=\"value.isDarkMode ? moonlight : 'white'\"\n      :colorRing=\"true\"\n      @click=\"openColorPicker\"\n    />\n    <IconButton\n      :iconConfig=\"{ ...configComputed, name: 'refresh' }\"\n      :backgroundColor=\"value.isDarkMode ? moonlight : 'white'\"\n      :colorRing=\"true\"\n      @click=\"setRandomColor\"\n    />\n  </Stack>\n  <Stack class=\"picker\" v-else-if=\"kind === 'background'\" classes=\"justify-center\">\n    <IconButton\n      backgroundColor=\"white\"\n      @click=\"set('isDarkMode', false)\"\n      class=\"_background-picker thin-border--dark\"\n      :iconConfig=\"{ name: 'sun-filled', type: 'pop', color: 'black' }\"\n    />\n    <IconButton\n      :backgroundColor=\"nightfall\"\n      @click=\"set('isDarkMode', true)\"\n      class=\"_background-picker thin-border--light\"\n      :iconConfig=\"{ name: 'moon-filled', type: 'pop', color: 'white' }\"\n    />\n  </Stack>\n  <Stack class=\"picker\" v-else-if=\"kind === 'stroke'\" classes=\"justify-center\">\n    <IconButton\n      :colorRing=\"true\"\n      @click=\"openColorPicker\"\n      :iconConfig=\"{ name: 'color-picker', color: '#e8e8e8', type: 'print' }\"\n    />\n  </Stack>\n</template>\n\n<style lang=\"sass\">\n.picker\n  ._background-picker svg\n    opacity: 0.1\n.picker-tooltip\n  font-size: 1.5em\n  +pa($md)\n  +C(background, primary)\n  border-radius: $md\n  font-weight: 500\n  white-space: nowrap\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, toRef, Ref } from '@vue/composition-api'\nimport { Dialog, QColor, QTooltip } from 'quasar'\nimport DialogWrapper from '../dialogs/DialogWrapper.vue'\nimport IconButton from '../atoms/IconButton.vue'\nimport Stack from '../atoms/Stack.vue'\nimport { getRandomColor, cssVar } from '../../helpers/colorHelpers'\nimport { defaultsIconConfig, IconConfig } from '../../types'\n\nexport default defineComponent({\n  name: 'Picker',\n  components: { IconButton, Stack, QTooltip },\n  props: {\n    /**\n     * @example 'type'\n     */\n    kind: {\n      type: String as PropType<'type' | 'color' | 'stroke' | 'isDarkMode'>,\n      required: true,\n    },\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string} & { isDarkMode: boolean }}\n     */\n    value: {\n      type: Object as PropType<IconConfig & { isDarkMode: boolean }>,\n      default: () => ({ ...defaultsIconConfig({ isDarkMode: false }) }),\n    },\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string }}\n     */\n    configComputed: {\n      type: Object as PropType<IconConfig>,\n      default: () => ({ ...defaultsIconConfig() }),\n    },\n  },\n  setup(props, { emit }) {\n    function set(prop: 'type' | 'color' | 'stroke' | 'isDarkMode', value: string) {\n      emit('input', { ...props.value, [prop]: value })\n    }\n\n    function setRandomColor() {\n      const randomColor = getRandomColor()\n      set('color', randomColor)\n    }\n\n    const nightfall = cssVar('nightfall')\n    const moonlight = cssVar('moonlight')\n\n    function openColorPicker() {\n      Dialog.create({\n        component: DialogWrapper,\n        dialogProps: {\n          style: props.value.isDarkMode ? `background: ${nightfall}` : '',\n        },\n        slotComponent: QColor,\n        slotProps: {\n          noFooter: true,\n          flat: true,\n          formatModel: 'hexa',\n          value: props.value.color,\n          default: props.value.color,\n          dark: props.value.isDarkMode,\n        },\n        slotEvents: {\n          change: (newVal: string) => set(props.kind, newVal),\n        },\n      })\n    }\n\n    const colorSelection = [\n      cssVar('sig-purple'),\n      cssVar('sig-green'),\n      cssVar('sig-yellow'),\n      cssVar('sig-blue'),\n      cssVar('sig-pink'),\n    ]\n\n    return { set, setRandomColor, openColorPicker, colorSelection, nightfall, moonlight }\n  },\n})\n</script>\n");

/***/ }),

/***/ "b8bc":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"profile-card pa-md\">\n    <div class=\"_svg-elements-outer\">\n      <div class=\"_svg-elements-inner\" :style=\"`color: ${color}`\">\n        <svg\n          :class=\"name[0] === 'A' ? '_circle' : '_square'\"\n          width=\"33\"\n          height=\"32\"\n          viewBox=\"0 0 33 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M4 4L28.7567 0.520672L32.236 25.2774L7.47933 28.7567L4 4Z\" fill=\"black\" />\n          <path\n            d=\"M0.847081 7.63832L24.1184 4.36775L27.3889 27.6391L4.11765 30.9096L0.847081 7.63832Z\"\n            stroke=\"currentColor\"\n            stroke-width=\"1.5\"\n          />\n        </svg>\n        <svg\n          class=\"_mountain-left\"\n          width=\"22\"\n          height=\"32\"\n          viewBox=\"0 0 22 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M0.0629757 7.619L7.91637 8.99312L4.76748 16.1065L12.3308 16.9574L8.94963 23.6516L16.3733 24.2505C16.3733 24.2505 13.8688 29.3299 13.0993 31.1381\"\n            fill=\"black\"\n          />\n          <path\n            d=\"M1.73503 4.27501L9.58843 5.64913L6.43953 12.7625L14.0029 13.6134L10.6217 20.3076L18.0454 20.9065C18.0454 20.9065 15.5408 25.9859 14.7713 27.7941\"\n            stroke=\"currentColor\"\n            stroke-width=\"1.50064\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n        </svg>\n        <svg\n          class=\"_triangle\"\n          width=\"82\"\n          height=\"35\"\n          viewBox=\"0 0 82 35\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M37.4134 9.94034L57.2458 11.6376L37.723 29.8429L37.4134 9.94034Z\" fill=\"black\" />\n          <path\n            d=\"M37.114 16.5595L37.7495 31.5622L52.0619 18.2388L37.114 16.5595ZM35.5338 14.8678L55.5462 17.1161L36.3845 34.9536L35.5338 14.8678Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n        <svg\n          :class=\"name[0] === 'A' ? '_square' : '_circle'\"\n          width=\"31\"\n          height=\"25\"\n          viewBox=\"0 0 31 25\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M19 25C25.6274 25 31 19.4036 31 12.5C31 5.59644 25.6274 0 19 0C12.3726 0 7 5.59644 7 12.5C7 19.4036 12.3726 25 19 25Z\"\n            fill=\"black\"\n          />\n          <path\n            d=\"M11.5 23.25C17.4371 23.25 22.25 18.2132 22.25 12C22.25 5.7868 17.4371 0.75 11.5 0.75C5.56294 0.75 0.75 5.7868 0.75 12C0.75 18.2132 5.56294 23.25 11.5 23.25Z\"\n            stroke=\"currentColor\"\n            stroke-width=\"1.5\"\n          />\n        </svg>\n        <svg\n          class=\"_mountain-right\"\n          width=\"29\"\n          height=\"25\"\n          viewBox=\"0 0 29 25\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M27.8689 18.0683L20.4838 21.0635L19.385 13.3657L12.523 16.6508L11.8432 9.18516L5.23307 12.6099C5.23307 12.6099 4.66552 6.97756 4.35995 5.03713\"\n            stroke=\"currentColor\"\n            stroke-width=\"1.5\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n          <path\n            d=\"M27.8689 13.0523L20.4838 16.0475L19.385 8.34968L12.523 11.6348L11.8432 4.16917L5.23307 7.59391C5.23307 7.59391 4.66552 1.96157 4.35995 0.0211362\"\n            fill=\"black\"\n          />\n        </svg>\n      </div>\n    </div>\n    <div class=\"_profile-pic my-md\">\n      <img :src=\"profileUrl\" alt=\"Profile Picture\" :style=\"profileImgStyle\" />\n    </div>\n    <div class=\"pb-md text-h5 val\" :style=\"`color: ${color}`\">{{ name }}</div>\n    <div class=\"_description-outer pb-md\">\n      <div class=\"_description text-wrap-all\">{{ description }}</div>\n    </div>\n\n    <Stack v-if=\"links.length\">\n      <a v-for=\"link in links\" :key=\"link\" class=\"_link\" :href=\"link\">\n        <CompanyLogo :name=\"link.split('https://')[1].split('.')[0]\" />\n      </a>\n    </Stack>\n  </div>\n</template>\n\n<style lang=\"sass\">\n// $\n\n.profile-card\n  +C(background, white)\n.dark-mode\n  .profile-card\n    +C(background, moonlight)\n.profile-card\n  width: 310px\n  +flex-center()\n  border-radius: $md\n  position: relative\n  > *\n    position: relative\n    z-index: 1\n  ._svg-elements-outer\n    position: absolute\n    top: 0\n    bottom: 0\n    left: 0\n    right: 0\n    z-index: 0\n  ._svg-elements-inner\n    position: relative\n    svg\n      position: absolute\n  ._square\n    left: 15px\n    top: 100px\n  ._mountain-left\n    left: 35px\n    top: 40px\n  ._triangle\n    left: 55px\n    top: 5px\n  ._circle\n    right: 30px\n    top: 20px\n  ._mountain-right\n    right: 20px\n    top: 120px\n  ._profile-pic\n    display: flex\n    justify-content: center\n    height: 130px\n    width: 130px\n    border-radius: 50%\n    overflow: hidden\n    > img\n      height: 130px\n      width: auto\n  ._description\n    text-align: left\n    line-height: 40px\n  ._link\n    cursor: pointer\n    > *\n      +C(color, washed-cloth)\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, toRef, Ref } from '@vue/composition-api'\nimport CompanyLogo from './CompanyLogo.vue'\nimport Stack from './Stack.vue'\n\nexport default defineComponent({\n  name: 'ProfileCard',\n  components: { CompanyLogo, Stack },\n  props: {\n    name: { type: String, required: true },\n    description: { type: String, required: true },\n    profileUrl: { type: String, required: true },\n    profileImgStyle: { type: String, default: '' },\n    color: { type: String, required: true },\n    links: { type: Array as PropType<string[]>, default: () => [] },\n  },\n  setup(props) {\n    return {}\n  },\n})\n</script>\n");

/***/ }),

/***/ "d09f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div>\n    <p>{{ title }}</p>\n    <ul>\n      <li v-for=\"todo in todos\" :key=\"todo.id\" @click=\"increment\">\n        {{ todo.id }} - {{ todo.content }}\n      </li>\n    </ul>\n    <p>Count: {{ todoCount }} / {{ meta.totalCount }}</p>\n    <p>Active: {{ active ? 'yes' : 'no' }}</p>\n    <p>Clicks on todos: {{ clickCount }}</p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, toRef, Ref } from '@vue/composition-api'\nimport { Todo, Meta } from './models'\n\nfunction useClickCount () {\n  const clickCount = ref(0)\n  function increment () {\n    clickCount.value += 1\n    return clickCount.value\n  }\n\n  return { clickCount, increment }\n}\n\nfunction useDisplayTodo (todos: Ref<Todo[]>) {\n  const todoCount = computed(() => todos.value.length)\n  return { todoCount }\n}\n\nexport default defineComponent({\n  name: 'CompositionComponent',\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    todos: {\n      type: (Array as unknown) as PropType<Todo[]>,\n      default: () => [],\n    },\n    meta: {\n      type: (Object as unknown) as PropType<Meta>,\n      required: true,\n    },\n    active: {\n      type: Boolean,\n    },\n  },\n  setup (props) {\n    return { ...useClickCount(), ...useDisplayTodo(toRef(props, 'todos')) }\n  },\n})\n</script>\n");

/***/ }),

/***/ "d90f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"page-dev q-pa-xl\">\n    <!-- <div v-if=\"!filePath\" class=\"mb-xxl\">\n      <div class=\"t-h3 my-md\">Style Guide</div>\n      <router-link :to=\"ROUTE_PATHS.DEV_STYLE_GUIDE()\">Typography and colours</router-link>\n    </div> -->\n    <ComponentGallery\n      :componentFilesList=\"require.context('../components', true, /^\\.\\/.*\\.vue$/).keys()\"\n    />\n  </div>\n</template>\n\n<style lang=\"sass\" scoped>\n// $\n\n// .page-dev\n</style>\n\n<script>\n// import { ROUTE_PATHS } from '~router/routes'\nimport { ComponentGallery } from 'planetar'\n\nexport default {\n  name: 'PageDev',\n  components: { ComponentGallery },\n  data() {\n    return {\n      // ROUTE_PATHS,\n    }\n  },\n  methods: {},\n  computed: {\n    filePath() {\n      const r = this.$route\n      return r.query.filePath\n    },\n  },\n}\n</script>\n");

/***/ }),

/***/ "e126":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <a\n    :href=\"href\"\n    :class=\"`pep-link ${retroUnderline ? '_retro-underline' : ''} ${icon ? '_has-icon' : ''}`\"\n  >\n    <template v-if=\"icon\">\n      <CompanyLogo v-if=\"icon === 'github'\" name=\"github\" size=\"sm\" class=\"_icon\" />\n      <Pepicon v-else :name=\"icon\" size=\"sm\" class=\"_icon\" type=\"pop\" />\n      <div class=\"mr-sm\" />\n    </template>\n    <div>{{ content }}</div>\n  </a>\n</template>\n\n<style lang=\"sass\">\n.pep-link\n  // resets\n  text-decoration: none\n  text-decoration-color: none\n  &:focus\n    outline: 0\n    box-shadow: none\n  cursor: pointer\n  // alignment\n  display: flex\n  align-items: center\n  // typography\n  &._has-icon\n    font-weight: $medium\n  // colors\n  +C(color, letters)\n.dark-mode .pep-link\n  +C(color, white)\n\n\n.pep-link ._icon\n  +C(color, nightfall)\n.dark-mode\n  .pep-link ._icon\n    +C(color, white)\n\n.pep-link._retro-underline\n  position: relative\n  display: inline-block\n  &::after, &::before\n    content: ''\n    position: absolute\n    border-radius: 50px\n    transform: rotate(181deg) translateY(-2px)\n    transition: border-color 250ms\n    width: 105%\n  &::after\n    bottom: 0\n    left: -2px\n    +C(border-top, black, 2px solid)\n  &::before\n    justify-content: bottom\n    transform-origin: bottom\n    bottom: 1px\n    left: -2px\n    +C(border-bottom, primary, 6px solid)\n.dark-mode.pop-mode\n  .pep-link._retro-underline\n    &::after\n      +C(border-top, none, 2px solid)\n.dark-mode.print-mode\n  .pep-link._retro-underline\n    &::after\n      +C(border-top, primary, 2px solid)\n    &::before\n      +C(border-bottom, black, 6px solid)\n</style>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref, toRef, Ref } from '@vue/composition-api'\nimport { Pepicon } from 'vue-pepicons'\nimport CompanyLogo from './CompanyLogo.vue'\n\nexport default defineComponent({\n  name: 'PepLink',\n  components: { CompanyLogo, Pepicon },\n  props: {\n    href: { type: String },\n    content: { type: String },\n    icon: { type: String },\n    retroUnderline: { type: Boolean },\n  },\n  setup(props) {\n    return {}\n  },\n})\n</script>\n");

/***/ }),

/***/ "e20f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div id=\"q-app\">\n    <router-view />\n  </div>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'App',\n}\n</script>\n");

/***/ }),

/***/ "f463":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div :class=\"`stack stack--${gap}`\">\n    <div :class=\"`_inner-wrap ${classes}`\">\n      <slot>\n        <div class=\"_tile\" v-for=\"(tile, index) in tiles\" :key=\"tile.component + ':i:' + index\">\n          <component\n            :is=\"tile.component\"\n            :class=\"tile.class\"\n            :style=\"tile.style\"\n            v-bind=\"tile.props\"\n          />\n        </div>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<style lang=\"sass\" scoped>\n// $\n.stack\n  ._inner-wrap\n    display: flex\n    flex-wrap: wrap\n  &--md\n    ._inner-wrap\n      margin: calc(-#{$sm} / 2)\n      +media-xs(margin, calc(-#{$md} / 2))\n      > *\n        margin: calc(#{$sm} / 2)\n        +media-xs(margin, calc(#{$md} / 2))\n  &--lg\n    ._inner-wrap\n      margin: calc(-#{$lg} / 2)\n      +media-xs(margin, calc(-#{$xl} / 2))\n      > *\n        margin: calc(#{$lg} / 2)\n        +media-xs(margin, calc(#{$xl} / 2))\n</style>\n\n<script>\nexport default {\n  name: 'Stack',\n  props: {\n    /**\n     * The component names you pass as 'component' need to be globally registered with `vue.component(name, comp)`!\n     * Props are bound with `v-bind=\"props\"`\n     * Class and style are bound with `:class=\"class\" :style=\"style\"`\n     * @type {{ component: string, props: { [propName: string]: any }, class?: any, style?: any }[]}\n     * @example [{ component: 'StatsSummaryCard', props: { title: 'A', value: 100 } }, { component: 'StatsSummaryCard', props: { title: 'B', value: 250 } }]\n     */\n    tiles: { type: Array },\n    /**\n     * The spacing between the stack tiles.\n     * The beauty about this implementation of \"gap\" that the tiles are stacked with flexbox but the gap is applied similar to css grid, while keeping cross-browser compatibility.\n     * @type {'md'}\n     */\n    gap: { type: String, default: 'md' },\n    /**\n     * The classes to be applied to the wrapper around your content\n     * @example 'justify-between'\n     */\n    classes: { type: String, default: '' },\n  },\n  data() {\n    return {}\n  },\n  computed: {},\n  methods: {},\n}\n</script>\n");

/***/ }),

/***/ "fa97":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <button\n    :class=\"`icon-button reset-button ${isActive ? '_active' : ''}`\"\n    :style=\"`background: ${backgroundColor}; ${activeStyle}`\"\n    @click=\"click\"\n  >\n    <ColorRingSvg class=\"_inner\" v-if=\"hasColorRing\" />\n    <div class=\"_inner flex flex-center\">\n      <Pepicon\n        :class=\"`_icon ${isAnimating ? animationClass : ''}`\"\n        v-if=\"iconConfig && iconConfig.name\"\n        :name=\"iconConfig.name\"\n        :type=\"iconConfig.type\"\n        :color=\"iconConfig.color\"\n        :stroke=\"iconConfig.stroke\"\n        size=\"md\"\n      />\n    </div>\n    <slot></slot>\n  </button>\n</template>\n\n<style lang=\"sass\">\n.icon-button\n  border-radius: $border-radius\n  width: 36px\n  height: 36px\n  position: relative\n  transition: transform 100ms\n  ._inner\n    position: absolute\n    width: 100%\n    height: 100%\n    top: 0\n    left: 0\n  &:active\n    transform: scale(0.9)\n</style>\n\n<script lang=\"ts\">\nimport { Pepicon } from 'vue-pepicons'\nimport ColorRingSvg from './ColorRingSvg.vue'\nimport {\n  defineComponent,\n  PropType,\n  computed,\n  ref,\n  toRef,\n  Ref,\n  nextTick,\n} from '@vue/composition-api'\nimport { colors } from 'quasar'\nimport { defaultsIconConfig, IconConfig } from '../../types'\nconst { changeAlpha } = colors\n\nexport default defineComponent({\n  name: 'IconButton',\n  components: { ColorRingSvg, Pepicon },\n  props: {\n    backgroundColor: { type: String, default: 'white' },\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string }}\n     */\n    iconConfig: {\n      type: Object as PropType<IconConfig>,\n      default: () => ({ ...defaultsIconConfig() }),\n    },\n    isActive: { type: Boolean },\n    /**\n     * The active color is always shown as 50% opaque.\n     * The color applied will be `activeColor` || `iconConfig.color` || `backgroundColor`\n     */\n    activeColor: { type: String },\n    hasColorRing: { type: Boolean, default: false },\n    /**\n     * The animation class to be applied on click.\n     */\n    animationClass: { type: String },\n    /**\n     * The duration of the animation on click - needs 'animationClass' set as well to work.\n     */\n    animationDurationMs: { type: Number, default: 500 },\n  },\n  setup(props, { emit }) {\n    const activeStyle = computed(() => {\n      if (!props.isActive) return ''\n      const activeColor = props.activeColor || props.iconConfig?.color || props.backgroundColor\n      return `box-shadow: 0 0 0 3px ${changeAlpha(activeColor, 0.5)}`\n    })\n\n    const isAnimating = ref(false)\n    function click() {\n      isAnimating.value = true\n      setTimeout(() => (isAnimating.value = false), props.animationDurationMs)\n      emit('click')\n    }\n\n    return { activeStyle, click, isAnimating }\n  },\n})\n</script>\n");

/***/ }),

/***/ "fb21":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<template>\n  <div class=\"icon-tile\">\n    <Pepicon class=\"_svg\" v-bind=\"config\" size=\"26px\" />\n    <div class=\"_name\">\n      <div :class=\"`c-letters ${synonymHtml ? 'ellipsis' : ''}`\" style=\"max-width: 90%\">\n        {{ config.name }}\n      </div>\n      <div v-if=\"synonymHtml\" v-html=\"synonymHtml\" />\n    </div>\n  </div>\n</template>\n\n<style lang=\"sass\">\n// $\n.icon-tile\n  +C(background-color, white)\n.dark-mode\n  .icon-tile\n    +C(background-color, moonlight)\n.icon-tile\n  transition: background-color 500ms\n  border-radius: $border-radius\n  height: auto\n  display: flex\n  flex-direction: column\n  align-items: center\n  ._svg\n    cursor: zoom-in\n    flex: 1\n  ._name\n    height: 36px\n    font-size: 12px\n    line-height: 1.4em\n    width: 100%\n    text-align: center\n    +flex-center\n</style>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from '@vue/composition-api'\nimport { Pepicon as PepiconType, synonyms } from 'pepicons'\nimport { Pepicon } from 'vue-pepicons'\nimport { cleanupForSearch } from '../../helpers/search'\nimport { defaultsIconConfig, IconConfig } from '../../types'\n\nexport default defineComponent({\n  name: 'IconTile',\n  components: { Pepicon },\n  props: {\n    /**\n     * @type {{ name?: string, type: 'pop' | 'print', color: string, stroke: string }}\n     */\n    config: {\n      type: Object as PropType<IconConfig>,\n      default: () => ({ ...defaultsIconConfig() }),\n    },\n    searchInput: { type: String, default: '' },\n  },\n  setup(props) {\n    const searchInputSynonymHit = computed(() => {\n      const searchText = cleanupForSearch(props.searchInput)\n      if (!searchText) return undefined\n      const _synonyms = synonyms[props.config.name as PepiconType] || []\n      return _synonyms.find((s) => cleanupForSearch(s).includes(searchText))\n    })\n    const synonymHtml = computed(() => {\n      if (!searchInputSynonymHit.value) return ''\n      const text = searchInputSynonymHit.value.replace(\n        props.searchInput,\n        `<span class=\"c-old-tucan\">${props.searchInput}</span>`,\n      )\n      return `<div class=\"c-washed-cloth\" style=\"opacity: 0.8\">${text}</div>`\n    })\n\n    return { synonymHtml }\n  },\n})\n</script>\n");

/***/ })

}]);
//# sourceMappingURL=component-source-code.f67bebbf.js.map